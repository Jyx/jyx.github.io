<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Perl | joakimbech.com]]></title>
  <link href="http://jyx.github.io/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://jyx.github.io/"/>
  <updated>2014-01-02T08:25:17+01:00</updated>
  <id>http://jyx.github.io/</id>
  <author>
    <name><![CDATA[Joakim Bech]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Perl Pack and Unpack]]></title>
    <link href="http://jyx.github.io/blog/2012/03/04/perl-pack-and-unpack/"/>
    <updated>2012-03-04T00:15:48+01:00</updated>
    <id>http://jyx.github.io/blog/2012/03/04/perl-pack-and-unpack</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/perlpap/logo_perl.jpg">
When you have to read and write binary data using Perl, then you preferably use
the built in functions pack and unpack. With the pack function you will create
a string which will be different depending on what kind of template you provide
to the pack function (the unpack does the same, but in the opposite direction).</p>

<!-- more -->


<p>I was writing a simple Perl script that was reading a binary file which
contained data that originated from a c struct. I.e, I wanted to parse the
binary file and print what the values would be if the binary file was read into
the c struct.</p>

<p>Let&rsquo;s say that the struct is on the format:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">struct</span> <span class="n">binary_data</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">uint32_t</span> <span class="n">a</span><span class="p">;</span>
</span><span class='line'><span class="kt">uint32_t</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'><span class="kt">uint8_t</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I.e, we have data consisting of 4 bytes for &ldquo;a&rdquo;, 4 bytes for &ldquo;b&rdquo; and 1 byte for
&ldquo;c&rdquo;. Let us say that the binary files consist of the following values</p>

<pre><code>a = 196 dec (0xC4 hex)
b = 4293844428 dec (0xFFEEDDCC hex)
c = 75 dec (0x4B hex)
</code></pre>

<p>then our binary file, &ldquo;binary_data.bin&rdquo; would contain this:</p>

<pre><code>"c4 00 00 00 cc dd ee ff 4b"
</code></pre>

<p>To be able to read this back and print the values in decimal or hex, you simply
start by reading the size of each element in the struct one by one and for each
item you unpack the data according to the size of the element in the struct.
For uint32_t you use &ldquo;L&rdquo; and for uint8_t &ldquo;C&rdquo;. A complete listing of the
different templates (as they are called in Perl) could be found here. Be
careful about little- vs big-endian when you select template.</p>

<p>Below is a Perl script that both create the binary file, then read the data
back from the file and print the values both in decimal and hex.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;</span><span class="o">!</span><span class="sr">/usr/</span><span class="n">bin</span><span class="sr">/perl&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">binmode</span> <span class="n">FILE</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$buf</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;</span><span class="n">Write</span> <span class="n">decimal</span> <span class="nb">values</span> <span class="n">as</span> <span class="n">binary</span> <span class="n">data</span><span class="o">.</span><span class="sr">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">open</span> <span class="n">FILE</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&gt;</span><span class="n">binary_data</span><span class="o">.</span><span class="n">bin</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="ow">or</span> <span class="nb">die</span> <span class="vg">$!</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="k">my</span> <span class="nv">$data</span> <span class="o">=</span> <span class="nb">pack</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">L</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="mi">196</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="n">FILE</span> <span class="nv">$data</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nv">$data</span> <span class="o">=</span> <span class="nb">pack</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">L</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="mi">4293844428</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="n">FILE</span> <span class="nv">$data</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nv">$data</span> <span class="o">=</span> <span class="nb">pack</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">C</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="mi">75</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="n">FILE</span> <span class="nv">$data</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">close</span> <span class="n">FILE</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;</span><span class="n">Read</span> <span class="n">back</span> <span class="n">binary</span> <span class="n">data</span> <span class="n">to</span> <span class="n">decimal</span> <span class="n">value</span><span class="o">.</span><span class="sr">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">open</span> <span class="n">FILE</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">binary_data</span><span class="o">.</span><span class="n">bin</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="ow">or</span> <span class="nb">die</span> <span class="vg">$!</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">read</span> <span class="n">FILE</span><span class="p">,</span> <span class="nv">$buf</span><span class="p">,</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'><span class="nv">$data</span> <span class="o">=</span> <span class="nb">unpack</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">L</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="nv">$buf</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="nv">$data</span> <span class="o">.</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">.</span> <span class="nb">sprintf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nv">%x</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="nv">$data</span><span class="p">)</span> <span class="o">.</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">\</span><span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">read</span> <span class="n">FILE</span><span class="p">,</span> <span class="nv">$buf</span><span class="p">,</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'><span class="nv">$data</span> <span class="o">=</span> <span class="nb">unpack</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">L</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="nv">$buf</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="nv">$data</span> <span class="o">.</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">.</span> <span class="nb">sprintf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nv">%x</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="nv">$data</span><span class="p">)</span> <span class="o">.</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">\</span><span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">read</span> <span class="n">FILE</span><span class="p">,</span> <span class="nv">$buf</span><span class="p">,</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="nv">$data</span> <span class="o">=</span> <span class="nb">unpack</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">C</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="nv">$buf</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="nv">$data</span> <span class="o">.</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">.</span> <span class="nb">sprintf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nv">%x</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="nv">$data</span><span class="p">)</span> <span class="o">.</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">\</span><span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="nb">close</span> <span class="n">FILE</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
