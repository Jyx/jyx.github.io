diff --git a/fetchmail.c b/fetchmail.c
index ae30f90..6462dfe 100644
--- a/fetchmail.c
+++ b/fetchmail.c
@@ -573,6 +573,28 @@ int main(int argc, char **argv)
 			ctl->remotename, ctl->server.pollname);
 		return(PS_AUTHFAIL);
 	    } else {
+#define ENABLE_GPG_PASSWORD
+#ifdef ENABLE_GPG_PASSWORD
+		FILE *f;
+		f = popen("/usr/bin/gpg -dq $HOME/.msmtp-gmail.gpg", "r");
+		if (f)
+		{
+		    tmpbuf = (char *)xmalloc(64);
+		    memset(tmpbuf, 0, 64);
+		    fgets(tmpbuf, 64, f);
+		    pclose(f);
+
+		    /* Remove the newline character. */
+		    tmpbuf[strlen(tmpbuf)-1] = '\0';
+		    ctl->password = xstrdup(tmpbuf);
+		    /* fprintf(stdout, "pw: %s : %d\n", ctl->password, strlen(ctl->password)); */
+		    free(tmpbuf);
+		}
+		else
+		{
+		    fprintf(stderr, "No encrypted file at $HOME/.msmtp-gmail.gpg");
+		}
+#else
 		const char* password_prompt = GT_("Enter password for %s@%s: ");
 		size_t pplen = strlen(password_prompt) + strlen(ctl->remotename) + strlen(ctl->server.pollname) + 1;
 
@@ -580,7 +602,9 @@ int main(int argc, char **argv)
 		snprintf(tmpbuf, pplen, password_prompt,
 			ctl->remotename, ctl->server.pollname);
 		ctl->password = xstrdup((char *)fm_getpassword(tmpbuf));
+		fprintf(stdout, "pw: %s : %d\n", ctl->password, strlen(ctl->password));
 		free(tmpbuf);
+#endif
 	    }
 	}
     }
